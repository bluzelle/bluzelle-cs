// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: audit.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace bluzelle_cs {

  /// <summary>Holder for reflection information generated from audit.proto</summary>
  public static partial class AuditReflection {

    #region Descriptor
    /// <summary>File descriptor for audit.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuditReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgthdWRpdC5wcm90byL9AQoNYXVkaXRfbWVzc2FnZRIwCgtyYWZ0X2NvbW1p",
            "dBgBIAEoCzIZLnJhZnRfY29tbWl0X25vdGlmaWNhdGlvbkgAEicKDWxlYWRl",
            "cl9zdGF0dXMYAiABKAsyDi5sZWFkZXJfc3RhdHVzSAASMAoLcGJmdF9jb21t",
            "aXQYAyABKAsyGS5wYmZ0X2NvbW1pdF9ub3RpZmljYXRpb25IABIpCg5wcmlt",
            "YXJ5X3N0YXR1cxgEIAEoCzIPLnByaW1hcnlfc3RhdHVzSAASLQoQZmFpbHVy",
            "ZV9kZXRlY3RlZBgFIAEoCzIRLmZhaWx1cmVfZGV0ZWN0ZWRIAEIFCgNtc2ci",
            "ZgoNbGVhZGVyX3N0YXR1cxIMCgR0ZXJtGAEgASgEEg4KBmxlYWRlchgCIAEo",
            "CRIZChFjdXJyZW50X2xvZ19pbmRleBgDIAEoBBIcChRjdXJyZW50X2NvbW1p",
            "dF9pbmRleBgEIAEoBCJVChhyYWZ0X2NvbW1pdF9ub3RpZmljYXRpb24SEwoL",
            "c2VuZGVyX3V1aWQYASABKAkSEQoJbG9nX2luZGV4GAIgASgEEhEKCW9wZXJh",
            "dGlvbhgDIAEoCSIvCg5wcmltYXJ5X3N0YXR1cxIMCgR2aWV3GAEgASgEEg8K",
            "B3ByaW1hcnkYAiABKAkiWwoYcGJmdF9jb21taXRfbm90aWZpY2F0aW9uEhMK",
            "C3NlbmRlcl91dWlkGAEgASgJEhcKD3NlcXVlbmNlX251bWJlchgCIAEoBBIR",
            "CglvcGVyYXRpb24YAyABKAwiJwoQZmFpbHVyZV9kZXRlY3RlZBITCgtzZW5k",
            "ZXJfdXVpZBgBIAEoCUIOqgILYmx1emVsbGVfY3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.audit_message), global::bluzelle_cs.audit_message.Parser, new[]{ "RaftCommit", "LeaderStatus", "PbftCommit", "PrimaryStatus", "FailureDetected" }, new[]{ "Msg" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.leader_status), global::bluzelle_cs.leader_status.Parser, new[]{ "Term", "Leader", "CurrentLogIndex", "CurrentCommitIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.raft_commit_notification), global::bluzelle_cs.raft_commit_notification.Parser, new[]{ "SenderUuid", "LogIndex", "Operation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.primary_status), global::bluzelle_cs.primary_status.Parser, new[]{ "View", "Primary" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.pbft_commit_notification), global::bluzelle_cs.pbft_commit_notification.Parser, new[]{ "SenderUuid", "SequenceNumber", "Operation" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.failure_detected), global::bluzelle_cs.failure_detected.Parser, new[]{ "SenderUuid" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class audit_message : pb::IMessage<audit_message> {
    private static readonly pb::MessageParser<audit_message> _parser = new pb::MessageParser<audit_message>(() => new audit_message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<audit_message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.AuditReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public audit_message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public audit_message(audit_message other) : this() {
      switch (other.MsgCase) {
        case MsgOneofCase.RaftCommit:
          RaftCommit = other.RaftCommit.Clone();
          break;
        case MsgOneofCase.LeaderStatus:
          LeaderStatus = other.LeaderStatus.Clone();
          break;
        case MsgOneofCase.PbftCommit:
          PbftCommit = other.PbftCommit.Clone();
          break;
        case MsgOneofCase.PrimaryStatus:
          PrimaryStatus = other.PrimaryStatus.Clone();
          break;
        case MsgOneofCase.FailureDetected:
          FailureDetected = other.FailureDetected.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public audit_message Clone() {
      return new audit_message(this);
    }

    /// <summary>Field number for the "raft_commit" field.</summary>
    public const int RaftCommitFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.raft_commit_notification RaftCommit {
      get { return msgCase_ == MsgOneofCase.RaftCommit ? (global::bluzelle_cs.raft_commit_notification) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.RaftCommit;
      }
    }

    /// <summary>Field number for the "leader_status" field.</summary>
    public const int LeaderStatusFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.leader_status LeaderStatus {
      get { return msgCase_ == MsgOneofCase.LeaderStatus ? (global::bluzelle_cs.leader_status) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.LeaderStatus;
      }
    }

    /// <summary>Field number for the "pbft_commit" field.</summary>
    public const int PbftCommitFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.pbft_commit_notification PbftCommit {
      get { return msgCase_ == MsgOneofCase.PbftCommit ? (global::bluzelle_cs.pbft_commit_notification) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.PbftCommit;
      }
    }

    /// <summary>Field number for the "primary_status" field.</summary>
    public const int PrimaryStatusFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.primary_status PrimaryStatus {
      get { return msgCase_ == MsgOneofCase.PrimaryStatus ? (global::bluzelle_cs.primary_status) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.PrimaryStatus;
      }
    }

    /// <summary>Field number for the "failure_detected" field.</summary>
    public const int FailureDetectedFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.failure_detected FailureDetected {
      get { return msgCase_ == MsgOneofCase.FailureDetected ? (global::bluzelle_cs.failure_detected) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.FailureDetected;
      }
    }

    private object msg_;
    /// <summary>Enum of possible cases for the "msg" oneof.</summary>
    public enum MsgOneofCase {
      None = 0,
      RaftCommit = 1,
      LeaderStatus = 2,
      PbftCommit = 3,
      PrimaryStatus = 4,
      FailureDetected = 5,
    }
    private MsgOneofCase msgCase_ = MsgOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgOneofCase MsgCase {
      get { return msgCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMsg() {
      msgCase_ = MsgOneofCase.None;
      msg_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as audit_message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(audit_message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RaftCommit, other.RaftCommit)) return false;
      if (!object.Equals(LeaderStatus, other.LeaderStatus)) return false;
      if (!object.Equals(PbftCommit, other.PbftCommit)) return false;
      if (!object.Equals(PrimaryStatus, other.PrimaryStatus)) return false;
      if (!object.Equals(FailureDetected, other.FailureDetected)) return false;
      if (MsgCase != other.MsgCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (msgCase_ == MsgOneofCase.RaftCommit) hash ^= RaftCommit.GetHashCode();
      if (msgCase_ == MsgOneofCase.LeaderStatus) hash ^= LeaderStatus.GetHashCode();
      if (msgCase_ == MsgOneofCase.PbftCommit) hash ^= PbftCommit.GetHashCode();
      if (msgCase_ == MsgOneofCase.PrimaryStatus) hash ^= PrimaryStatus.GetHashCode();
      if (msgCase_ == MsgOneofCase.FailureDetected) hash ^= FailureDetected.GetHashCode();
      hash ^= (int) msgCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (msgCase_ == MsgOneofCase.RaftCommit) {
        output.WriteRawTag(10);
        output.WriteMessage(RaftCommit);
      }
      if (msgCase_ == MsgOneofCase.LeaderStatus) {
        output.WriteRawTag(18);
        output.WriteMessage(LeaderStatus);
      }
      if (msgCase_ == MsgOneofCase.PbftCommit) {
        output.WriteRawTag(26);
        output.WriteMessage(PbftCommit);
      }
      if (msgCase_ == MsgOneofCase.PrimaryStatus) {
        output.WriteRawTag(34);
        output.WriteMessage(PrimaryStatus);
      }
      if (msgCase_ == MsgOneofCase.FailureDetected) {
        output.WriteRawTag(42);
        output.WriteMessage(FailureDetected);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (msgCase_ == MsgOneofCase.RaftCommit) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RaftCommit);
      }
      if (msgCase_ == MsgOneofCase.LeaderStatus) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeaderStatus);
      }
      if (msgCase_ == MsgOneofCase.PbftCommit) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PbftCommit);
      }
      if (msgCase_ == MsgOneofCase.PrimaryStatus) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrimaryStatus);
      }
      if (msgCase_ == MsgOneofCase.FailureDetected) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FailureDetected);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(audit_message other) {
      if (other == null) {
        return;
      }
      switch (other.MsgCase) {
        case MsgOneofCase.RaftCommit:
          if (RaftCommit == null) {
            RaftCommit = new global::bluzelle_cs.raft_commit_notification();
          }
          RaftCommit.MergeFrom(other.RaftCommit);
          break;
        case MsgOneofCase.LeaderStatus:
          if (LeaderStatus == null) {
            LeaderStatus = new global::bluzelle_cs.leader_status();
          }
          LeaderStatus.MergeFrom(other.LeaderStatus);
          break;
        case MsgOneofCase.PbftCommit:
          if (PbftCommit == null) {
            PbftCommit = new global::bluzelle_cs.pbft_commit_notification();
          }
          PbftCommit.MergeFrom(other.PbftCommit);
          break;
        case MsgOneofCase.PrimaryStatus:
          if (PrimaryStatus == null) {
            PrimaryStatus = new global::bluzelle_cs.primary_status();
          }
          PrimaryStatus.MergeFrom(other.PrimaryStatus);
          break;
        case MsgOneofCase.FailureDetected:
          if (FailureDetected == null) {
            FailureDetected = new global::bluzelle_cs.failure_detected();
          }
          FailureDetected.MergeFrom(other.FailureDetected);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::bluzelle_cs.raft_commit_notification subBuilder = new global::bluzelle_cs.raft_commit_notification();
            if (msgCase_ == MsgOneofCase.RaftCommit) {
              subBuilder.MergeFrom(RaftCommit);
            }
            input.ReadMessage(subBuilder);
            RaftCommit = subBuilder;
            break;
          }
          case 18: {
            global::bluzelle_cs.leader_status subBuilder = new global::bluzelle_cs.leader_status();
            if (msgCase_ == MsgOneofCase.LeaderStatus) {
              subBuilder.MergeFrom(LeaderStatus);
            }
            input.ReadMessage(subBuilder);
            LeaderStatus = subBuilder;
            break;
          }
          case 26: {
            global::bluzelle_cs.pbft_commit_notification subBuilder = new global::bluzelle_cs.pbft_commit_notification();
            if (msgCase_ == MsgOneofCase.PbftCommit) {
              subBuilder.MergeFrom(PbftCommit);
            }
            input.ReadMessage(subBuilder);
            PbftCommit = subBuilder;
            break;
          }
          case 34: {
            global::bluzelle_cs.primary_status subBuilder = new global::bluzelle_cs.primary_status();
            if (msgCase_ == MsgOneofCase.PrimaryStatus) {
              subBuilder.MergeFrom(PrimaryStatus);
            }
            input.ReadMessage(subBuilder);
            PrimaryStatus = subBuilder;
            break;
          }
          case 42: {
            global::bluzelle_cs.failure_detected subBuilder = new global::bluzelle_cs.failure_detected();
            if (msgCase_ == MsgOneofCase.FailureDetected) {
              subBuilder.MergeFrom(FailureDetected);
            }
            input.ReadMessage(subBuilder);
            FailureDetected = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class leader_status : pb::IMessage<leader_status> {
    private static readonly pb::MessageParser<leader_status> _parser = new pb::MessageParser<leader_status>(() => new leader_status());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<leader_status> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.AuditReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public leader_status() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public leader_status(leader_status other) : this() {
      term_ = other.term_;
      leader_ = other.leader_;
      currentLogIndex_ = other.currentLogIndex_;
      currentCommitIndex_ = other.currentCommitIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public leader_status Clone() {
      return new leader_status(this);
    }

    /// <summary>Field number for the "term" field.</summary>
    public const int TermFieldNumber = 1;
    private ulong term_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Term {
      get { return term_; }
      set {
        term_ = value;
      }
    }

    /// <summary>Field number for the "leader" field.</summary>
    public const int LeaderFieldNumber = 2;
    private string leader_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Leader {
      get { return leader_; }
      set {
        leader_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "current_log_index" field.</summary>
    public const int CurrentLogIndexFieldNumber = 3;
    private ulong currentLogIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CurrentLogIndex {
      get { return currentLogIndex_; }
      set {
        currentLogIndex_ = value;
      }
    }

    /// <summary>Field number for the "current_commit_index" field.</summary>
    public const int CurrentCommitIndexFieldNumber = 4;
    private ulong currentCommitIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CurrentCommitIndex {
      get { return currentCommitIndex_; }
      set {
        currentCommitIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as leader_status);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(leader_status other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Term != other.Term) return false;
      if (Leader != other.Leader) return false;
      if (CurrentLogIndex != other.CurrentLogIndex) return false;
      if (CurrentCommitIndex != other.CurrentCommitIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Term != 0UL) hash ^= Term.GetHashCode();
      if (Leader.Length != 0) hash ^= Leader.GetHashCode();
      if (CurrentLogIndex != 0UL) hash ^= CurrentLogIndex.GetHashCode();
      if (CurrentCommitIndex != 0UL) hash ^= CurrentCommitIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Term != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Term);
      }
      if (Leader.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Leader);
      }
      if (CurrentLogIndex != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(CurrentLogIndex);
      }
      if (CurrentCommitIndex != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(CurrentCommitIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Term != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Term);
      }
      if (Leader.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Leader);
      }
      if (CurrentLogIndex != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CurrentLogIndex);
      }
      if (CurrentCommitIndex != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CurrentCommitIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(leader_status other) {
      if (other == null) {
        return;
      }
      if (other.Term != 0UL) {
        Term = other.Term;
      }
      if (other.Leader.Length != 0) {
        Leader = other.Leader;
      }
      if (other.CurrentLogIndex != 0UL) {
        CurrentLogIndex = other.CurrentLogIndex;
      }
      if (other.CurrentCommitIndex != 0UL) {
        CurrentCommitIndex = other.CurrentCommitIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Term = input.ReadUInt64();
            break;
          }
          case 18: {
            Leader = input.ReadString();
            break;
          }
          case 24: {
            CurrentLogIndex = input.ReadUInt64();
            break;
          }
          case 32: {
            CurrentCommitIndex = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class raft_commit_notification : pb::IMessage<raft_commit_notification> {
    private static readonly pb::MessageParser<raft_commit_notification> _parser = new pb::MessageParser<raft_commit_notification>(() => new raft_commit_notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<raft_commit_notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.AuditReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public raft_commit_notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public raft_commit_notification(raft_commit_notification other) : this() {
      senderUuid_ = other.senderUuid_;
      logIndex_ = other.logIndex_;
      operation_ = other.operation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public raft_commit_notification Clone() {
      return new raft_commit_notification(this);
    }

    /// <summary>Field number for the "sender_uuid" field.</summary>
    public const int SenderUuidFieldNumber = 1;
    private string senderUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderUuid {
      get { return senderUuid_; }
      set {
        senderUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "log_index" field.</summary>
    public const int LogIndexFieldNumber = 2;
    private ulong logIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong LogIndex {
      get { return logIndex_; }
      set {
        logIndex_ = value;
      }
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 3;
    private string operation_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Operation {
      get { return operation_; }
      set {
        operation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as raft_commit_notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(raft_commit_notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SenderUuid != other.SenderUuid) return false;
      if (LogIndex != other.LogIndex) return false;
      if (Operation != other.Operation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SenderUuid.Length != 0) hash ^= SenderUuid.GetHashCode();
      if (LogIndex != 0UL) hash ^= LogIndex.GetHashCode();
      if (Operation.Length != 0) hash ^= Operation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SenderUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SenderUuid);
      }
      if (LogIndex != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(LogIndex);
      }
      if (Operation.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SenderUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderUuid);
      }
      if (LogIndex != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LogIndex);
      }
      if (Operation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Operation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(raft_commit_notification other) {
      if (other == null) {
        return;
      }
      if (other.SenderUuid.Length != 0) {
        SenderUuid = other.SenderUuid;
      }
      if (other.LogIndex != 0UL) {
        LogIndex = other.LogIndex;
      }
      if (other.Operation.Length != 0) {
        Operation = other.Operation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SenderUuid = input.ReadString();
            break;
          }
          case 16: {
            LogIndex = input.ReadUInt64();
            break;
          }
          case 26: {
            Operation = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class primary_status : pb::IMessage<primary_status> {
    private static readonly pb::MessageParser<primary_status> _parser = new pb::MessageParser<primary_status>(() => new primary_status());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<primary_status> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.AuditReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public primary_status() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public primary_status(primary_status other) : this() {
      view_ = other.view_;
      primary_ = other.primary_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public primary_status Clone() {
      return new primary_status(this);
    }

    /// <summary>Field number for the "view" field.</summary>
    public const int ViewFieldNumber = 1;
    private ulong view_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong View {
      get { return view_; }
      set {
        view_ = value;
      }
    }

    /// <summary>Field number for the "primary" field.</summary>
    public const int PrimaryFieldNumber = 2;
    private string primary_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Primary {
      get { return primary_; }
      set {
        primary_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as primary_status);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(primary_status other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (View != other.View) return false;
      if (Primary != other.Primary) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (View != 0UL) hash ^= View.GetHashCode();
      if (Primary.Length != 0) hash ^= Primary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (View != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(View);
      }
      if (Primary.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Primary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (View != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(View);
      }
      if (Primary.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Primary);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(primary_status other) {
      if (other == null) {
        return;
      }
      if (other.View != 0UL) {
        View = other.View;
      }
      if (other.Primary.Length != 0) {
        Primary = other.Primary;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            View = input.ReadUInt64();
            break;
          }
          case 18: {
            Primary = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pbft_commit_notification : pb::IMessage<pbft_commit_notification> {
    private static readonly pb::MessageParser<pbft_commit_notification> _parser = new pb::MessageParser<pbft_commit_notification>(() => new pbft_commit_notification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pbft_commit_notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.AuditReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbft_commit_notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbft_commit_notification(pbft_commit_notification other) : this() {
      senderUuid_ = other.senderUuid_;
      sequenceNumber_ = other.sequenceNumber_;
      operation_ = other.operation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbft_commit_notification Clone() {
      return new pbft_commit_notification(this);
    }

    /// <summary>Field number for the "sender_uuid" field.</summary>
    public const int SenderUuidFieldNumber = 1;
    private string senderUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderUuid {
      get { return senderUuid_; }
      set {
        senderUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sequence_number" field.</summary>
    public const int SequenceNumberFieldNumber = 2;
    private ulong sequenceNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SequenceNumber {
      get { return sequenceNumber_; }
      set {
        sequenceNumber_ = value;
      }
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 3;
    private pb::ByteString operation_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Operation {
      get { return operation_; }
      set {
        operation_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pbft_commit_notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pbft_commit_notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SenderUuid != other.SenderUuid) return false;
      if (SequenceNumber != other.SequenceNumber) return false;
      if (Operation != other.Operation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SenderUuid.Length != 0) hash ^= SenderUuid.GetHashCode();
      if (SequenceNumber != 0UL) hash ^= SequenceNumber.GetHashCode();
      if (Operation.Length != 0) hash ^= Operation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SenderUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SenderUuid);
      }
      if (SequenceNumber != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(SequenceNumber);
      }
      if (Operation.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SenderUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderUuid);
      }
      if (SequenceNumber != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SequenceNumber);
      }
      if (Operation.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Operation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pbft_commit_notification other) {
      if (other == null) {
        return;
      }
      if (other.SenderUuid.Length != 0) {
        SenderUuid = other.SenderUuid;
      }
      if (other.SequenceNumber != 0UL) {
        SequenceNumber = other.SequenceNumber;
      }
      if (other.Operation.Length != 0) {
        Operation = other.Operation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SenderUuid = input.ReadString();
            break;
          }
          case 16: {
            SequenceNumber = input.ReadUInt64();
            break;
          }
          case 26: {
            Operation = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class failure_detected : pb::IMessage<failure_detected> {
    private static readonly pb::MessageParser<failure_detected> _parser = new pb::MessageParser<failure_detected>(() => new failure_detected());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<failure_detected> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.AuditReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public failure_detected() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public failure_detected(failure_detected other) : this() {
      senderUuid_ = other.senderUuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public failure_detected Clone() {
      return new failure_detected(this);
    }

    /// <summary>Field number for the "sender_uuid" field.</summary>
    public const int SenderUuidFieldNumber = 1;
    private string senderUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SenderUuid {
      get { return senderUuid_; }
      set {
        senderUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as failure_detected);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(failure_detected other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SenderUuid != other.SenderUuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SenderUuid.Length != 0) hash ^= SenderUuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SenderUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SenderUuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SenderUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SenderUuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(failure_detected other) {
      if (other == null) {
        return;
      }
      if (other.SenderUuid.Length != 0) {
        SenderUuid = other.SenderUuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SenderUuid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
