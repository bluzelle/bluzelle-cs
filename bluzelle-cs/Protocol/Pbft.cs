// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: pbft.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace bluzelle_cs {

  /// <summary>Holder for reflection information generated from pbft.proto</summary>
  public static partial class PbftReflection {

    #region Descriptor
    /// <summary>File descriptor for pbft.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PbftReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpwYmZ0LnByb3RvGg5ibHV6ZWxsZS5wcm90byKKAwoIcGJmdF9tc2cSHAoE",
            "dHlwZRgBIAEoDjIOLnBiZnRfbXNnX3R5cGUSDAoEdmlldxgCIAEoBBIQCghz",
            "ZXF1ZW5jZRgDIAEoBBIUCgxyZXF1ZXN0X2hhc2gYBSABKAwSHgoHcmVxdWVz",
            "dBgEIAEoCzINLmJ6bl9lbnZlbG9wZRISCgpzdGF0ZV9oYXNoGAYgASgJEiIK",
            "CXBlZXJfaW5mbxgHIAEoCzIPLnBiZnRfcGVlcl9pbmZvEioKE2NoZWNrcG9p",
            "bnRfbWVzc2FnZXMYCCADKAsyDS5iem5fZW52ZWxvcGUSKAoPcHJlcGFyZWRf",
            "cHJvb2ZzGAkgAygLMg8ucHJlcGFyZWRfcHJvb2YSKgoTdmlld2NoYW5nZV9t",
            "ZXNzYWdlcxgLIAMoCzINLmJ6bl9lbnZlbG9wZRIrChRwcmVfcHJlcGFyZV9t",
            "ZXNzYWdlcxgMIAMoCzINLmJ6bl9lbnZlbG9wZRITCgtjb25maWdfaGFzaBgN",
            "IAEoCRIOCgZjb25maWcYDiABKAkiQwoPcGJmdF9jb25maWdfbXNnEhUKDWNv",
            "bmZpZ3VyYXRpb24YASABKAkSGQoRam9pbl9yZXF1ZXN0X2hhc2gYAiABKAwi",
            "wAEKE3BiZnRfbWVtYmVyc2hpcF9tc2cSJwoEdHlwZRgBIAEoDjIZLnBiZnRf",
            "bWVtYmVyc2hpcF9tc2dfdHlwZRIiCglwZWVyX2luZm8YAiABKAsyDy5wYmZ0",
            "X3BlZXJfaW5mbxIQCghzZXF1ZW5jZRgDIAEoBBISCgpzdGF0ZV9oYXNoGAQg",
            "ASgJEhIKCnN0YXRlX2RhdGEYBSABKAkSIgoLbmV3dmlld19tc2cYBiABKAsy",
            "DS5iem5fZW52ZWxvcGUiWwoOcGJmdF9wZWVyX2luZm8SDAoEaG9zdBgBIAEo",
            "CRIMCgRwb3J0GAIgASgNEhEKCWh0dHBfcG9ydBgDIAEoDRIMCgRuYW1lGAQg",
            "ASgJEgwKBHV1aWQYBSABKAkiVAoOcHJlcGFyZWRfcHJvb2YSIgoLcHJlX3By",
            "ZXBhcmUYASABKAsyDS5iem5fZW52ZWxvcGUSHgoHcHJlcGFyZRgCIAMoCzIN",
            "LmJ6bl9lbnZlbG9wZSraAQoNcGJmdF9tc2dfdHlwZRIWChJQQkZUX01TR19V",
            "TkRFRklORUQQABIXChNQQkZUX01TR19QUkVQUkVQQVJFEAISFAoQUEJGVF9N",
            "U0dfUFJFUEFSRRADEhMKD1BCRlRfTVNHX0NPTU1JVBAEEhcKE1BCRlRfTVNH",
            "X0NIRUNLUE9JTlQQBRIRCg1QQkZUX01TR19KT0lOEAYSEgoOUEJGVF9NU0df",
            "TEVBVkUQBxIXChNQQkZUX01TR19WSUVXQ0hBTkdFEAgSFAoQUEJGVF9NU0df",
            "TkVXVklFVxAJKqsBChhwYmZ0X21lbWJlcnNoaXBfbXNnX3R5cGUSFwoTUEJG",
            "VF9NTVNHX1VOREVGSU5FRBAAEhIKDlBCRlRfTU1TR19KT0lOEAESGwoXUEJG",
            "VF9NTVNHX0pPSU5fUkVTUE9OU0UQAhITCg9QQkZUX01NU0dfTEVBVkUQAxIX",
            "ChNQQkZUX01NU0dfR0VUX1NUQVRFEAQSFwoTUEJGVF9NTVNHX1NFVF9TVEFU",
            "RRAFQg6qAgtibHV6ZWxsZV9jc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::bluzelle_cs.BluzelleReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::bluzelle_cs.pbft_msg_type), typeof(global::bluzelle_cs.pbft_membership_msg_type), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.pbft_msg), global::bluzelle_cs.pbft_msg.Parser, new[]{ "Type", "View", "Sequence", "RequestHash", "Request", "StateHash", "PeerInfo", "CheckpointMessages", "PreparedProofs", "ViewchangeMessages", "PrePrepareMessages", "ConfigHash", "Config" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.pbft_config_msg), global::bluzelle_cs.pbft_config_msg.Parser, new[]{ "Configuration", "JoinRequestHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.pbft_membership_msg), global::bluzelle_cs.pbft_membership_msg.Parser, new[]{ "Type", "PeerInfo", "Sequence", "StateHash", "StateData", "NewviewMsg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.pbft_peer_info), global::bluzelle_cs.pbft_peer_info.Parser, new[]{ "Host", "Port", "HttpPort", "Name", "Uuid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.prepared_proof), global::bluzelle_cs.prepared_proof.Parser, new[]{ "PrePrepare", "Prepare" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum pbft_msg_type {
    [pbr::OriginalName("PBFT_MSG_UNDEFINED")] PbftMsgUndefined = 0,
    [pbr::OriginalName("PBFT_MSG_PREPREPARE")] PbftMsgPreprepare = 2,
    [pbr::OriginalName("PBFT_MSG_PREPARE")] PbftMsgPrepare = 3,
    [pbr::OriginalName("PBFT_MSG_COMMIT")] PbftMsgCommit = 4,
    [pbr::OriginalName("PBFT_MSG_CHECKPOINT")] PbftMsgCheckpoint = 5,
    [pbr::OriginalName("PBFT_MSG_JOIN")] PbftMsgJoin = 6,
    [pbr::OriginalName("PBFT_MSG_LEAVE")] PbftMsgLeave = 7,
    [pbr::OriginalName("PBFT_MSG_VIEWCHANGE")] PbftMsgViewchange = 8,
    [pbr::OriginalName("PBFT_MSG_NEWVIEW")] PbftMsgNewview = 9,
  }

  public enum pbft_membership_msg_type {
    [pbr::OriginalName("PBFT_MMSG_UNDEFINED")] PbftMmsgUndefined = 0,
    [pbr::OriginalName("PBFT_MMSG_JOIN")] PbftMmsgJoin = 1,
    [pbr::OriginalName("PBFT_MMSG_JOIN_RESPONSE")] PbftMmsgJoinResponse = 2,
    [pbr::OriginalName("PBFT_MMSG_LEAVE")] PbftMmsgLeave = 3,
    [pbr::OriginalName("PBFT_MMSG_GET_STATE")] PbftMmsgGetState = 4,
    [pbr::OriginalName("PBFT_MMSG_SET_STATE")] PbftMmsgSetState = 5,
  }

  #endregion

  #region Messages
  public sealed partial class pbft_msg : pb::IMessage<pbft_msg> {
    private static readonly pb::MessageParser<pbft_msg> _parser = new pb::MessageParser<pbft_msg>(() => new pbft_msg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pbft_msg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.PbftReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbft_msg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbft_msg(pbft_msg other) : this() {
      type_ = other.type_;
      view_ = other.view_;
      sequence_ = other.sequence_;
      requestHash_ = other.requestHash_;
      request_ = other.request_ != null ? other.request_.Clone() : null;
      stateHash_ = other.stateHash_;
      peerInfo_ = other.peerInfo_ != null ? other.peerInfo_.Clone() : null;
      checkpointMessages_ = other.checkpointMessages_.Clone();
      preparedProofs_ = other.preparedProofs_.Clone();
      viewchangeMessages_ = other.viewchangeMessages_.Clone();
      prePrepareMessages_ = other.prePrepareMessages_.Clone();
      configHash_ = other.configHash_;
      config_ = other.config_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbft_msg Clone() {
      return new pbft_msg(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::bluzelle_cs.pbft_msg_type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.pbft_msg_type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "view" field.</summary>
    public const int ViewFieldNumber = 2;
    private ulong view_;
    /// <summary>
    /// used for preprepare, prepare, commit, viewchange(v+1)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong View {
      get { return view_; }
      set {
        view_ = value;
      }
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 3;
    private ulong sequence_;
    /// <summary>
    /// used for preprepare, prepare, commit, checkpoint, viewchange (last valid checkpoint sequence)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    /// <summary>Field number for the "request_hash" field.</summary>
    public const int RequestHashFieldNumber = 5;
    private pb::ByteString requestHash_ = pb::ByteString.Empty;
    /// <summary>
    /// used for preprepare, prepare, commit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString RequestHash {
      get { return requestHash_; }
      set {
        requestHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 4;
    private global::bluzelle_cs.bzn_envelope request_;
    /// <summary>
    /// most messages should only have the hash, not the original request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.bzn_envelope Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "state_hash" field.</summary>
    public const int StateHashFieldNumber = 6;
    private string stateHash_ = "";
    /// <summary>
    /// for checkpoints
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StateHash {
      get { return stateHash_; }
      set {
        stateHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "peer_info" field.</summary>
    public const int PeerInfoFieldNumber = 7;
    private global::bluzelle_cs.pbft_peer_info peerInfo_;
    /// <summary>
    /// for join/leave requests
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.pbft_peer_info PeerInfo {
      get { return peerInfo_; }
      set {
        peerInfo_ = value;
      }
    }

    /// <summary>Field number for the "checkpoint_messages" field.</summary>
    public const int CheckpointMessagesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::bluzelle_cs.bzn_envelope> _repeated_checkpointMessages_codec
        = pb::FieldCodec.ForMessage(66, global::bluzelle_cs.bzn_envelope.Parser);
    private readonly pbc::RepeatedField<global::bluzelle_cs.bzn_envelope> checkpointMessages_ = new pbc::RepeatedField<global::bluzelle_cs.bzn_envelope>();
    /// <summary>
    /// for viewchange
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::bluzelle_cs.bzn_envelope> CheckpointMessages {
      get { return checkpointMessages_; }
    }

    /// <summary>Field number for the "prepared_proofs" field.</summary>
    public const int PreparedProofsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::bluzelle_cs.prepared_proof> _repeated_preparedProofs_codec
        = pb::FieldCodec.ForMessage(74, global::bluzelle_cs.prepared_proof.Parser);
    private readonly pbc::RepeatedField<global::bluzelle_cs.prepared_proof> preparedProofs_ = new pbc::RepeatedField<global::bluzelle_cs.prepared_proof>();
    /// <summary>
    /// for viewchange, and newview (O)
    /// P, p_m, O
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::bluzelle_cs.prepared_proof> PreparedProofs {
      get { return preparedProofs_; }
    }

    /// <summary>Field number for the "viewchange_messages" field.</summary>
    public const int ViewchangeMessagesFieldNumber = 11;
    private static readonly pb::FieldCodec<global::bluzelle_cs.bzn_envelope> _repeated_viewchangeMessages_codec
        = pb::FieldCodec.ForMessage(90, global::bluzelle_cs.bzn_envelope.Parser);
    private readonly pbc::RepeatedField<global::bluzelle_cs.bzn_envelope> viewchangeMessages_ = new pbc::RepeatedField<global::bluzelle_cs.bzn_envelope>();
    /// <summary>
    /// for newview
    /// V valid view change messages
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::bluzelle_cs.bzn_envelope> ViewchangeMessages {
      get { return viewchangeMessages_; }
    }

    /// <summary>Field number for the "pre_prepare_messages" field.</summary>
    public const int PrePrepareMessagesFieldNumber = 12;
    private static readonly pb::FieldCodec<global::bluzelle_cs.bzn_envelope> _repeated_prePrepareMessages_codec
        = pb::FieldCodec.ForMessage(98, global::bluzelle_cs.bzn_envelope.Parser);
    private readonly pbc::RepeatedField<global::bluzelle_cs.bzn_envelope> prePrepareMessages_ = new pbc::RepeatedField<global::bluzelle_cs.bzn_envelope>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::bluzelle_cs.bzn_envelope> PrePrepareMessages {
      get { return prePrepareMessages_; }
    }

    /// <summary>Field number for the "config_hash" field.</summary>
    public const int ConfigHashFieldNumber = 13;
    private string configHash_ = "";
    /// <summary>
    /// for newview
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfigHash {
      get { return configHash_; }
      set {
        configHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 14;
    private string config_ = "";
    /// <summary>
    /// for newview
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Config {
      get { return config_; }
      set {
        config_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pbft_msg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pbft_msg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (View != other.View) return false;
      if (Sequence != other.Sequence) return false;
      if (RequestHash != other.RequestHash) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if (StateHash != other.StateHash) return false;
      if (!object.Equals(PeerInfo, other.PeerInfo)) return false;
      if(!checkpointMessages_.Equals(other.checkpointMessages_)) return false;
      if(!preparedProofs_.Equals(other.preparedProofs_)) return false;
      if(!viewchangeMessages_.Equals(other.viewchangeMessages_)) return false;
      if(!prePrepareMessages_.Equals(other.prePrepareMessages_)) return false;
      if (ConfigHash != other.ConfigHash) return false;
      if (Config != other.Config) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (View != 0UL) hash ^= View.GetHashCode();
      if (Sequence != 0UL) hash ^= Sequence.GetHashCode();
      if (RequestHash.Length != 0) hash ^= RequestHash.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (StateHash.Length != 0) hash ^= StateHash.GetHashCode();
      if (peerInfo_ != null) hash ^= PeerInfo.GetHashCode();
      hash ^= checkpointMessages_.GetHashCode();
      hash ^= preparedProofs_.GetHashCode();
      hash ^= viewchangeMessages_.GetHashCode();
      hash ^= prePrepareMessages_.GetHashCode();
      if (ConfigHash.Length != 0) hash ^= ConfigHash.GetHashCode();
      if (Config.Length != 0) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (View != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(View);
      }
      if (Sequence != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Sequence);
      }
      if (request_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Request);
      }
      if (RequestHash.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(RequestHash);
      }
      if (StateHash.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StateHash);
      }
      if (peerInfo_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PeerInfo);
      }
      checkpointMessages_.WriteTo(output, _repeated_checkpointMessages_codec);
      preparedProofs_.WriteTo(output, _repeated_preparedProofs_codec);
      viewchangeMessages_.WriteTo(output, _repeated_viewchangeMessages_codec);
      prePrepareMessages_.WriteTo(output, _repeated_prePrepareMessages_codec);
      if (ConfigHash.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ConfigHash);
      }
      if (Config.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (View != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(View);
      }
      if (Sequence != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sequence);
      }
      if (RequestHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(RequestHash);
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (StateHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StateHash);
      }
      if (peerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeerInfo);
      }
      size += checkpointMessages_.CalculateSize(_repeated_checkpointMessages_codec);
      size += preparedProofs_.CalculateSize(_repeated_preparedProofs_codec);
      size += viewchangeMessages_.CalculateSize(_repeated_viewchangeMessages_codec);
      size += prePrepareMessages_.CalculateSize(_repeated_prePrepareMessages_codec);
      if (ConfigHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfigHash);
      }
      if (Config.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pbft_msg other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.View != 0UL) {
        View = other.View;
      }
      if (other.Sequence != 0UL) {
        Sequence = other.Sequence;
      }
      if (other.RequestHash.Length != 0) {
        RequestHash = other.RequestHash;
      }
      if (other.request_ != null) {
        if (request_ == null) {
          request_ = new global::bluzelle_cs.bzn_envelope();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.StateHash.Length != 0) {
        StateHash = other.StateHash;
      }
      if (other.peerInfo_ != null) {
        if (peerInfo_ == null) {
          peerInfo_ = new global::bluzelle_cs.pbft_peer_info();
        }
        PeerInfo.MergeFrom(other.PeerInfo);
      }
      checkpointMessages_.Add(other.checkpointMessages_);
      preparedProofs_.Add(other.preparedProofs_);
      viewchangeMessages_.Add(other.viewchangeMessages_);
      prePrepareMessages_.Add(other.prePrepareMessages_);
      if (other.ConfigHash.Length != 0) {
        ConfigHash = other.ConfigHash;
      }
      if (other.Config.Length != 0) {
        Config = other.Config;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::bluzelle_cs.pbft_msg_type) input.ReadEnum();
            break;
          }
          case 16: {
            View = input.ReadUInt64();
            break;
          }
          case 24: {
            Sequence = input.ReadUInt64();
            break;
          }
          case 34: {
            if (request_ == null) {
              request_ = new global::bluzelle_cs.bzn_envelope();
            }
            input.ReadMessage(request_);
            break;
          }
          case 42: {
            RequestHash = input.ReadBytes();
            break;
          }
          case 50: {
            StateHash = input.ReadString();
            break;
          }
          case 58: {
            if (peerInfo_ == null) {
              peerInfo_ = new global::bluzelle_cs.pbft_peer_info();
            }
            input.ReadMessage(peerInfo_);
            break;
          }
          case 66: {
            checkpointMessages_.AddEntriesFrom(input, _repeated_checkpointMessages_codec);
            break;
          }
          case 74: {
            preparedProofs_.AddEntriesFrom(input, _repeated_preparedProofs_codec);
            break;
          }
          case 90: {
            viewchangeMessages_.AddEntriesFrom(input, _repeated_viewchangeMessages_codec);
            break;
          }
          case 98: {
            prePrepareMessages_.AddEntriesFrom(input, _repeated_prePrepareMessages_codec);
            break;
          }
          case 106: {
            ConfigHash = input.ReadString();
            break;
          }
          case 114: {
            Config = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pbft_config_msg : pb::IMessage<pbft_config_msg> {
    private static readonly pb::MessageParser<pbft_config_msg> _parser = new pb::MessageParser<pbft_config_msg>(() => new pbft_config_msg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pbft_config_msg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.PbftReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbft_config_msg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbft_config_msg(pbft_config_msg other) : this() {
      configuration_ = other.configuration_;
      joinRequestHash_ = other.joinRequestHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbft_config_msg Clone() {
      return new pbft_config_msg(this);
    }

    /// <summary>Field number for the "configuration" field.</summary>
    public const int ConfigurationFieldNumber = 1;
    private string configuration_ = "";
    /// <summary>
    /// for new_config
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Configuration {
      get { return configuration_; }
      set {
        configuration_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "join_request_hash" field.</summary>
    public const int JoinRequestHashFieldNumber = 2;
    private pb::ByteString joinRequestHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString JoinRequestHash {
      get { return joinRequestHash_; }
      set {
        joinRequestHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pbft_config_msg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pbft_config_msg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Configuration != other.Configuration) return false;
      if (JoinRequestHash != other.JoinRequestHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Configuration.Length != 0) hash ^= Configuration.GetHashCode();
      if (JoinRequestHash.Length != 0) hash ^= JoinRequestHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Configuration.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Configuration);
      }
      if (JoinRequestHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(JoinRequestHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Configuration.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Configuration);
      }
      if (JoinRequestHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(JoinRequestHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pbft_config_msg other) {
      if (other == null) {
        return;
      }
      if (other.Configuration.Length != 0) {
        Configuration = other.Configuration;
      }
      if (other.JoinRequestHash.Length != 0) {
        JoinRequestHash = other.JoinRequestHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Configuration = input.ReadString();
            break;
          }
          case 18: {
            JoinRequestHash = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class pbft_membership_msg : pb::IMessage<pbft_membership_msg> {
    private static readonly pb::MessageParser<pbft_membership_msg> _parser = new pb::MessageParser<pbft_membership_msg>(() => new pbft_membership_msg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pbft_membership_msg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.PbftReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbft_membership_msg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbft_membership_msg(pbft_membership_msg other) : this() {
      type_ = other.type_;
      peerInfo_ = other.peerInfo_ != null ? other.peerInfo_.Clone() : null;
      sequence_ = other.sequence_;
      stateHash_ = other.stateHash_;
      stateData_ = other.stateData_;
      newviewMsg_ = other.newviewMsg_ != null ? other.newviewMsg_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbft_membership_msg Clone() {
      return new pbft_membership_msg(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::bluzelle_cs.pbft_membership_msg_type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.pbft_membership_msg_type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "peer_info" field.</summary>
    public const int PeerInfoFieldNumber = 2;
    private global::bluzelle_cs.pbft_peer_info peerInfo_;
    /// <summary>
    /// for join/leave requests
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.pbft_peer_info PeerInfo {
      get { return peerInfo_; }
      set {
        peerInfo_ = value;
      }
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 3;
    private ulong sequence_;
    /// <summary>
    /// for get_state, set_state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    /// <summary>Field number for the "state_hash" field.</summary>
    public const int StateHashFieldNumber = 4;
    private string stateHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StateHash {
      get { return stateHash_; }
      set {
        stateHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state_data" field.</summary>
    public const int StateDataFieldNumber = 5;
    private string stateData_ = "";
    /// <summary>
    /// for set_state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StateData {
      get { return stateData_; }
      set {
        stateData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "newview_msg" field.</summary>
    public const int NewviewMsgFieldNumber = 6;
    private global::bluzelle_cs.bzn_envelope newviewMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.bzn_envelope NewviewMsg {
      get { return newviewMsg_; }
      set {
        newviewMsg_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pbft_membership_msg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pbft_membership_msg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(PeerInfo, other.PeerInfo)) return false;
      if (Sequence != other.Sequence) return false;
      if (StateHash != other.StateHash) return false;
      if (StateData != other.StateData) return false;
      if (!object.Equals(NewviewMsg, other.NewviewMsg)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (peerInfo_ != null) hash ^= PeerInfo.GetHashCode();
      if (Sequence != 0UL) hash ^= Sequence.GetHashCode();
      if (StateHash.Length != 0) hash ^= StateHash.GetHashCode();
      if (StateData.Length != 0) hash ^= StateData.GetHashCode();
      if (newviewMsg_ != null) hash ^= NewviewMsg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (peerInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PeerInfo);
      }
      if (Sequence != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Sequence);
      }
      if (StateHash.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StateHash);
      }
      if (StateData.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StateData);
      }
      if (newviewMsg_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(NewviewMsg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (peerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeerInfo);
      }
      if (Sequence != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sequence);
      }
      if (StateHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StateHash);
      }
      if (StateData.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StateData);
      }
      if (newviewMsg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewviewMsg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pbft_membership_msg other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.peerInfo_ != null) {
        if (peerInfo_ == null) {
          peerInfo_ = new global::bluzelle_cs.pbft_peer_info();
        }
        PeerInfo.MergeFrom(other.PeerInfo);
      }
      if (other.Sequence != 0UL) {
        Sequence = other.Sequence;
      }
      if (other.StateHash.Length != 0) {
        StateHash = other.StateHash;
      }
      if (other.StateData.Length != 0) {
        StateData = other.StateData;
      }
      if (other.newviewMsg_ != null) {
        if (newviewMsg_ == null) {
          newviewMsg_ = new global::bluzelle_cs.bzn_envelope();
        }
        NewviewMsg.MergeFrom(other.NewviewMsg);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::bluzelle_cs.pbft_membership_msg_type) input.ReadEnum();
            break;
          }
          case 18: {
            if (peerInfo_ == null) {
              peerInfo_ = new global::bluzelle_cs.pbft_peer_info();
            }
            input.ReadMessage(peerInfo_);
            break;
          }
          case 24: {
            Sequence = input.ReadUInt64();
            break;
          }
          case 34: {
            StateHash = input.ReadString();
            break;
          }
          case 42: {
            StateData = input.ReadString();
            break;
          }
          case 50: {
            if (newviewMsg_ == null) {
              newviewMsg_ = new global::bluzelle_cs.bzn_envelope();
            }
            input.ReadMessage(newviewMsg_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class pbft_peer_info : pb::IMessage<pbft_peer_info> {
    private static readonly pb::MessageParser<pbft_peer_info> _parser = new pb::MessageParser<pbft_peer_info>(() => new pbft_peer_info());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<pbft_peer_info> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.PbftReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbft_peer_info() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbft_peer_info(pbft_peer_info other) : this() {
      host_ = other.host_;
      port_ = other.port_;
      httpPort_ = other.httpPort_;
      name_ = other.name_;
      uuid_ = other.uuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbft_peer_info Clone() {
      return new pbft_peer_info(this);
    }

    /// <summary>Field number for the "host" field.</summary>
    public const int HostFieldNumber = 1;
    private string host_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Host {
      get { return host_; }
      set {
        host_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private uint port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "http_port" field.</summary>
    public const int HttpPortFieldNumber = 3;
    private uint httpPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint HttpPort {
      get { return httpPort_; }
      set {
        httpPort_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 5;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as pbft_peer_info);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(pbft_peer_info other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Host != other.Host) return false;
      if (Port != other.Port) return false;
      if (HttpPort != other.HttpPort) return false;
      if (Name != other.Name) return false;
      if (Uuid != other.Uuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Host.Length != 0) hash ^= Host.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (HttpPort != 0) hash ^= HttpPort.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Host.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Host);
      }
      if (Port != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Port);
      }
      if (HttpPort != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(HttpPort);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Uuid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Uuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Host.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Host);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Port);
      }
      if (HttpPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HttpPort);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pbft_peer_info other) {
      if (other == null) {
        return;
      }
      if (other.Host.Length != 0) {
        Host = other.Host;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.HttpPort != 0) {
        HttpPort = other.HttpPort;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Host = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadUInt32();
            break;
          }
          case 24: {
            HttpPort = input.ReadUInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Uuid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class prepared_proof : pb::IMessage<prepared_proof> {
    private static readonly pb::MessageParser<prepared_proof> _parser = new pb::MessageParser<prepared_proof>(() => new prepared_proof());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<prepared_proof> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.PbftReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public prepared_proof() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public prepared_proof(prepared_proof other) : this() {
      prePrepare_ = other.prePrepare_ != null ? other.prePrepare_.Clone() : null;
      prepare_ = other.prepare_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public prepared_proof Clone() {
      return new prepared_proof(this);
    }

    /// <summary>Field number for the "pre_prepare" field.</summary>
    public const int PrePrepareFieldNumber = 1;
    private global::bluzelle_cs.bzn_envelope prePrepare_;
    /// <summary>
    /// O
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.bzn_envelope PrePrepare {
      get { return prePrepare_; }
      set {
        prePrepare_ = value;
      }
    }

    /// <summary>Field number for the "prepare" field.</summary>
    public const int PrepareFieldNumber = 2;
    private static readonly pb::FieldCodec<global::bluzelle_cs.bzn_envelope> _repeated_prepare_codec
        = pb::FieldCodec.ForMessage(18, global::bluzelle_cs.bzn_envelope.Parser);
    private readonly pbc::RepeatedField<global::bluzelle_cs.bzn_envelope> prepare_ = new pbc::RepeatedField<global::bluzelle_cs.bzn_envelope>();
    /// <summary>
    /// P, P_m
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::bluzelle_cs.bzn_envelope> Prepare {
      get { return prepare_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as prepared_proof);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(prepared_proof other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PrePrepare, other.PrePrepare)) return false;
      if(!prepare_.Equals(other.prepare_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (prePrepare_ != null) hash ^= PrePrepare.GetHashCode();
      hash ^= prepare_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (prePrepare_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PrePrepare);
      }
      prepare_.WriteTo(output, _repeated_prepare_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (prePrepare_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrePrepare);
      }
      size += prepare_.CalculateSize(_repeated_prepare_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(prepared_proof other) {
      if (other == null) {
        return;
      }
      if (other.prePrepare_ != null) {
        if (prePrepare_ == null) {
          prePrepare_ = new global::bluzelle_cs.bzn_envelope();
        }
        PrePrepare.MergeFrom(other.PrePrepare);
      }
      prepare_.Add(other.prepare_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (prePrepare_ == null) {
              prePrepare_ = new global::bluzelle_cs.bzn_envelope();
            }
            input.ReadMessage(prePrepare_);
            break;
          }
          case 18: {
            prepare_.AddEntriesFrom(input, _repeated_prepare_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
