// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: status.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace bluzelle_cs {

  /// <summary>Holder for reflection information generated from status.proto</summary>
  public static partial class StatusReflection {

    #region Descriptor
    /// <summary>File descriptor for status.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StatusReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgxzdGF0dXMucHJvdG8iEAoOc3RhdHVzX3JlcXVlc3QihAEKD3N0YXR1c19y",
            "ZXNwb25zZRIVCg1zd2FybV92ZXJzaW9uGAEgASgJEhgKEHN3YXJtX2dpdF9j",
            "b21taXQYAiABKAkSDgoGdXB0aW1lGAMgASgJEhoKEm1vZHVsZV9zdGF0dXNf",
            "anNvbhgEIAEoCRIUCgxwYmZ0X2VuYWJsZWQYBSABKAhCDqoCC2JsdXplbGxl",
            "X2NzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.status_request), global::bluzelle_cs.status_request.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.status_response), global::bluzelle_cs.status_response.Parser, new[]{ "SwarmVersion", "SwarmGitCommit", "Uptime", "ModuleStatusJson", "PbftEnabled" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class status_request : pb::IMessage<status_request> {
    private static readonly pb::MessageParser<status_request> _parser = new pb::MessageParser<status_request>(() => new status_request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<status_request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.StatusReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public status_request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public status_request(status_request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public status_request Clone() {
      return new status_request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as status_request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(status_request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(status_request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class status_response : pb::IMessage<status_response> {
    private static readonly pb::MessageParser<status_response> _parser = new pb::MessageParser<status_response>(() => new status_response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<status_response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.StatusReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public status_response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public status_response(status_response other) : this() {
      swarmVersion_ = other.swarmVersion_;
      swarmGitCommit_ = other.swarmGitCommit_;
      uptime_ = other.uptime_;
      moduleStatusJson_ = other.moduleStatusJson_;
      pbftEnabled_ = other.pbftEnabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public status_response Clone() {
      return new status_response(this);
    }

    /// <summary>Field number for the "swarm_version" field.</summary>
    public const int SwarmVersionFieldNumber = 1;
    private string swarmVersion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SwarmVersion {
      get { return swarmVersion_; }
      set {
        swarmVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "swarm_git_commit" field.</summary>
    public const int SwarmGitCommitFieldNumber = 2;
    private string swarmGitCommit_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SwarmGitCommit {
      get { return swarmGitCommit_; }
      set {
        swarmGitCommit_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uptime" field.</summary>
    public const int UptimeFieldNumber = 3;
    private string uptime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uptime {
      get { return uptime_; }
      set {
        uptime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "module_status_json" field.</summary>
    public const int ModuleStatusJsonFieldNumber = 4;
    private string moduleStatusJson_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModuleStatusJson {
      get { return moduleStatusJson_; }
      set {
        moduleStatusJson_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pbft_enabled" field.</summary>
    public const int PbftEnabledFieldNumber = 5;
    private bool pbftEnabled_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PbftEnabled {
      get { return pbftEnabled_; }
      set {
        pbftEnabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as status_response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(status_response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SwarmVersion != other.SwarmVersion) return false;
      if (SwarmGitCommit != other.SwarmGitCommit) return false;
      if (Uptime != other.Uptime) return false;
      if (ModuleStatusJson != other.ModuleStatusJson) return false;
      if (PbftEnabled != other.PbftEnabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SwarmVersion.Length != 0) hash ^= SwarmVersion.GetHashCode();
      if (SwarmGitCommit.Length != 0) hash ^= SwarmGitCommit.GetHashCode();
      if (Uptime.Length != 0) hash ^= Uptime.GetHashCode();
      if (ModuleStatusJson.Length != 0) hash ^= ModuleStatusJson.GetHashCode();
      if (PbftEnabled != false) hash ^= PbftEnabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SwarmVersion.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SwarmVersion);
      }
      if (SwarmGitCommit.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SwarmGitCommit);
      }
      if (Uptime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Uptime);
      }
      if (ModuleStatusJson.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ModuleStatusJson);
      }
      if (PbftEnabled != false) {
        output.WriteRawTag(40);
        output.WriteBool(PbftEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SwarmVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SwarmVersion);
      }
      if (SwarmGitCommit.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SwarmGitCommit);
      }
      if (Uptime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uptime);
      }
      if (ModuleStatusJson.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModuleStatusJson);
      }
      if (PbftEnabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(status_response other) {
      if (other == null) {
        return;
      }
      if (other.SwarmVersion.Length != 0) {
        SwarmVersion = other.SwarmVersion;
      }
      if (other.SwarmGitCommit.Length != 0) {
        SwarmGitCommit = other.SwarmGitCommit;
      }
      if (other.Uptime.Length != 0) {
        Uptime = other.Uptime;
      }
      if (other.ModuleStatusJson.Length != 0) {
        ModuleStatusJson = other.ModuleStatusJson;
      }
      if (other.PbftEnabled != false) {
        PbftEnabled = other.PbftEnabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SwarmVersion = input.ReadString();
            break;
          }
          case 18: {
            SwarmGitCommit = input.ReadString();
            break;
          }
          case 26: {
            Uptime = input.ReadString();
            break;
          }
          case 34: {
            ModuleStatusJson = input.ReadString();
            break;
          }
          case 40: {
            PbftEnabled = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
