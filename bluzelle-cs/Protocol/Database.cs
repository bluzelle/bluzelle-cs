// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: database.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace bluzelle_cs {

  /// <summary>Holder for reflection information generated from database.proto</summary>
  public static partial class DatabaseReflection {

    #region Descriptor
    /// <summary>File descriptor for database.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DatabaseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5kYXRhYmFzZS5wcm90byK8BQoMZGF0YWJhc2VfbXNnEiAKBmhlYWRlchgB",
            "IAEoCzIQLmRhdGFiYXNlX2hlYWRlchIiCgZjcmVhdGUYAiABKAsyEC5kYXRh",
            "YmFzZV9jcmVhdGVIABIeCgRyZWFkGAMgASgLMg4uZGF0YWJhc2VfcmVhZEgA",
            "EiIKBnVwZGF0ZRgEIAEoCzIQLmRhdGFiYXNlX3VwZGF0ZUgAEiIKBmRlbGV0",
            "ZRgFIAEoCzIQLmRhdGFiYXNlX2RlbGV0ZUgAEhwKA2hhcxgGIAEoCzINLmRh",
            "dGFiYXNlX2hhc0gAEiEKBGtleXMYByABKAsyES5kYXRhYmFzZV9yZXF1ZXN0",
            "SAASIQoEc2l6ZRgIIAEoCzIRLmRhdGFiYXNlX3JlcXVlc3RIABIoCglzdWJz",
            "Y3JpYmUYCSABKAsyEy5kYXRhYmFzZV9zdWJzY3JpYmVIABIsCgt1bnN1YnNj",
            "cmliZRgKIAEoCzIVLmRhdGFiYXNlX3Vuc3Vic2NyaWJlSAASJAoHbnVsbG1z",
            "ZxgLIAEoCzIRLmRhdGFiYXNlX251bGxtc2dIABImCgljcmVhdGVfZGIYDCAB",
            "KAsyES5kYXRhYmFzZV9yZXF1ZXN0SAASJgoJZGVsZXRlX2RiGA0gASgLMhEu",
            "ZGF0YWJhc2VfcmVxdWVzdEgAEiIKBmhhc19kYhgOIAEoCzIQLmRhdGFiYXNl",
            "X2hhc19kYkgAEiQKB3dyaXRlcnMYECABKAsyES5kYXRhYmFzZV9yZXF1ZXN0",
            "SAASKAoLYWRkX3dyaXRlcnMYESABKAsyES5kYXRhYmFzZV93cml0ZXJzSAAS",
            "KwoOcmVtb3ZlX3dyaXRlcnMYEiABKAsyES5kYXRhYmFzZV93cml0ZXJzSAAS",
            "JAoKcXVpY2tfcmVhZBgTIAEoCzIOLmRhdGFiYXNlX3JlYWRIAEIFCgNtc2ci",
            "TwoPZGF0YWJhc2VfaGVhZGVyEg8KB2RiX3V1aWQYASABKAkSEQoFbm9uY2UY",
            "AiABKARCAjABEhgKEHBvaW50X29mX2NvbnRhY3QYAyABKAwiLQoPZGF0YWJh",
            "c2VfY3JlYXRlEgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoDCIcCg1kYXRh",
            "YmFzZV9yZWFkEgsKA2tleRgBIAEoCSItCg9kYXRhYmFzZV91cGRhdGUSCwoD",
            "a2V5GAEgASgJEg0KBXZhbHVlGAIgASgMIh4KD2RhdGFiYXNlX2RlbGV0ZRIL",
            "CgNrZXkYASABKAkiIQoSZGF0YWJhc2Vfc3Vic2NyaWJlEgsKA2tleRgBIAEo",
            "CSIyChRkYXRhYmFzZV91bnN1YnNjcmliZRILCgNrZXkYASABKAkSDQoFbm9u",
            "Y2UYAiABKAQiGwoMZGF0YWJhc2VfaGFzEgsKA2tleRgBIAEoCSIRCg9kYXRh",
            "YmFzZV9oYXNfZGIiIwoQZGF0YWJhc2Vfd3JpdGVycxIPCgd3cml0ZXJzGAEg",
            "AygJIqUBChxkYXRhYmFzZV9zdWJzY3JpcHRpb25fdXBkYXRlEgsKA2tleRgB",
            "IAEoCRINCgV2YWx1ZRgCIAEoDBI/CglvcGVyYXRpb24YAyABKA4yLC5kYXRh",
            "YmFzZV9zdWJzY3JpcHRpb25fdXBkYXRlLm9wZXJhdGlvbl90eXBlIigKDm9w",
            "ZXJhdGlvbl90eXBlEgoKBlVQREFURRAAEgoKBkRFTEVURRABIogBChpkYXRh",
            "YmFzZV9yZWRpcmVjdF9yZXNwb25zZRIRCglsZWFkZXJfaWQYASABKAkSEwoL",
            "bGVhZGVyX25hbWUYAiABKAkSEwoLbGVhZGVyX2hvc3QYAyABKAkSEwoLbGVh",
            "ZGVyX3BvcnQYBCABKA0SGAoQbGVhZGVyX2h0dHBfcG9ydBgFIAEoDSIxChVk",
            "YXRhYmFzZV9oYXNfcmVzcG9uc2USCwoDa2V5GAEgASgJEgsKA2hhcxgCIAEo",
            "CCI1ChhkYXRhYmFzZV9oYXNfZGJfcmVzcG9uc2USDAoEdXVpZBgBIAEoCRIL",
            "CgNoYXMYAiABKAgiJgoWZGF0YWJhc2Vfa2V5c19yZXNwb25zZRIMCgRrZXlz",
            "GAEgAygJIjQKFmRhdGFiYXNlX3JlYWRfcmVzcG9uc2USCwoDa2V5GAEgASgJ",
            "Eg0KBXZhbHVlGAIgASgMIjUKFmRhdGFiYXNlX3NpemVfcmVzcG9uc2USDQoF",
            "Ynl0ZXMYASABKAUSDAoEa2V5cxgCIAEoBSISChBkYXRhYmFzZV9yZXF1ZXN0",
            "IjsKGWRhdGFiYXNlX3dyaXRlcnNfcmVzcG9uc2USDQoFb3duZXIYASABKAkS",
            "DwoHd3JpdGVycxgCIAMoCSIhCg5kYXRhYmFzZV9lcnJvchIPCgdtZXNzYWdl",
            "GAEgASgJItADChFkYXRhYmFzZV9yZXNwb25zZRIgCgZoZWFkZXIYASABKAsy",
            "EC5kYXRhYmFzZV9oZWFkZXISLwoIcmVkaXJlY3QYAiABKAsyGy5kYXRhYmFz",
            "ZV9yZWRpcmVjdF9yZXNwb25zZUgAEjwKE3N1YnNjcmlwdGlvbl91cGRhdGUY",
            "AyABKAsyHS5kYXRhYmFzZV9zdWJzY3JpcHRpb25fdXBkYXRlSAASJwoEcmVh",
            "ZBgEIAEoCzIXLmRhdGFiYXNlX3JlYWRfcmVzcG9uc2VIABIlCgNoYXMYBSAB",
            "KAsyFi5kYXRhYmFzZV9oYXNfcmVzcG9uc2VIABInCgRrZXlzGAYgASgLMhcu",
            "ZGF0YWJhc2Vfa2V5c19yZXNwb25zZUgAEicKBHNpemUYByABKAsyFy5kYXRh",
            "YmFzZV9zaXplX3Jlc3BvbnNlSAASIAoFZXJyb3IYCCABKAsyDy5kYXRhYmFz",
            "ZV9lcnJvckgAEisKBmhhc19kYhgJIAEoCzIZLmRhdGFiYXNlX2hhc19kYl9y",
            "ZXNwb25zZUgAEi0KB3dyaXRlcnMYCiABKAsyGi5kYXRhYmFzZV93cml0ZXJz",
            "X3Jlc3BvbnNlSABCCgoIcmVzcG9uc2UiEgoQZGF0YWJhc2VfbnVsbG1zZ0IO",
            "qgILYmx1emVsbGVfY3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_msg), global::bluzelle_cs.database_msg.Parser, new[]{ "Header", "Create", "Read", "Update", "Delete", "Has", "Keys", "Size", "Subscribe", "Unsubscribe", "Nullmsg", "CreateDb", "DeleteDb", "HasDb", "Writers", "AddWriters", "RemoveWriters", "QuickRead" }, new[]{ "Msg" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_header), global::bluzelle_cs.database_header.Parser, new[]{ "DbUuid", "Nonce", "PointOfContact" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_create), global::bluzelle_cs.database_create.Parser, new[]{ "Key", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_read), global::bluzelle_cs.database_read.Parser, new[]{ "Key" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_update), global::bluzelle_cs.database_update.Parser, new[]{ "Key", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_delete), global::bluzelle_cs.database_delete.Parser, new[]{ "Key" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_subscribe), global::bluzelle_cs.database_subscribe.Parser, new[]{ "Key" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_unsubscribe), global::bluzelle_cs.database_unsubscribe.Parser, new[]{ "Key", "Nonce" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_has), global::bluzelle_cs.database_has.Parser, new[]{ "Key" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_has_db), global::bluzelle_cs.database_has_db.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_writers), global::bluzelle_cs.database_writers.Parser, new[]{ "Writers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_subscription_update), global::bluzelle_cs.database_subscription_update.Parser, new[]{ "Key", "Value", "Operation" }, null, new[]{ typeof(global::bluzelle_cs.database_subscription_update.Types.operation_type) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_redirect_response), global::bluzelle_cs.database_redirect_response.Parser, new[]{ "LeaderId", "LeaderName", "LeaderHost", "LeaderPort", "LeaderHttpPort" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_has_response), global::bluzelle_cs.database_has_response.Parser, new[]{ "Key", "Has" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_has_db_response), global::bluzelle_cs.database_has_db_response.Parser, new[]{ "Uuid", "Has" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_keys_response), global::bluzelle_cs.database_keys_response.Parser, new[]{ "Keys" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_read_response), global::bluzelle_cs.database_read_response.Parser, new[]{ "Key", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_size_response), global::bluzelle_cs.database_size_response.Parser, new[]{ "Bytes", "Keys" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_request), global::bluzelle_cs.database_request.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_writers_response), global::bluzelle_cs.database_writers_response.Parser, new[]{ "Owner", "Writers" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_error), global::bluzelle_cs.database_error.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_response), global::bluzelle_cs.database_response.Parser, new[]{ "Header", "Redirect", "SubscriptionUpdate", "Read", "Has", "Keys", "Size", "Error", "HasDb", "Writers" }, new[]{ "Response" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::bluzelle_cs.database_nullmsg), global::bluzelle_cs.database_nullmsg.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class database_msg : pb::IMessage<database_msg> {
    private static readonly pb::MessageParser<database_msg> _parser = new pb::MessageParser<database_msg>(() => new database_msg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_msg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_msg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_msg(database_msg other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      switch (other.MsgCase) {
        case MsgOneofCase.Create:
          Create = other.Create.Clone();
          break;
        case MsgOneofCase.Read:
          Read = other.Read.Clone();
          break;
        case MsgOneofCase.Update:
          Update = other.Update.Clone();
          break;
        case MsgOneofCase.Delete:
          Delete = other.Delete.Clone();
          break;
        case MsgOneofCase.Has:
          Has = other.Has.Clone();
          break;
        case MsgOneofCase.Keys:
          Keys = other.Keys.Clone();
          break;
        case MsgOneofCase.Size:
          Size = other.Size.Clone();
          break;
        case MsgOneofCase.Subscribe:
          Subscribe = other.Subscribe.Clone();
          break;
        case MsgOneofCase.Unsubscribe:
          Unsubscribe = other.Unsubscribe.Clone();
          break;
        case MsgOneofCase.Nullmsg:
          Nullmsg = other.Nullmsg.Clone();
          break;
        case MsgOneofCase.CreateDb:
          CreateDb = other.CreateDb.Clone();
          break;
        case MsgOneofCase.DeleteDb:
          DeleteDb = other.DeleteDb.Clone();
          break;
        case MsgOneofCase.HasDb:
          HasDb = other.HasDb.Clone();
          break;
        case MsgOneofCase.Writers:
          Writers = other.Writers.Clone();
          break;
        case MsgOneofCase.AddWriters:
          AddWriters = other.AddWriters.Clone();
          break;
        case MsgOneofCase.RemoveWriters:
          RemoveWriters = other.RemoveWriters.Clone();
          break;
        case MsgOneofCase.QuickRead:
          QuickRead = other.QuickRead.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_msg Clone() {
      return new database_msg(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::bluzelle_cs.database_header header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_header Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "create" field.</summary>
    public const int CreateFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_create Create {
      get { return msgCase_ == MsgOneofCase.Create ? (global::bluzelle_cs.database_create) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Create;
      }
    }

    /// <summary>Field number for the "read" field.</summary>
    public const int ReadFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_read Read {
      get { return msgCase_ == MsgOneofCase.Read ? (global::bluzelle_cs.database_read) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Read;
      }
    }

    /// <summary>Field number for the "update" field.</summary>
    public const int UpdateFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_update Update {
      get { return msgCase_ == MsgOneofCase.Update ? (global::bluzelle_cs.database_update) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Update;
      }
    }

    /// <summary>Field number for the "delete" field.</summary>
    public const int DeleteFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_delete Delete {
      get { return msgCase_ == MsgOneofCase.Delete ? (global::bluzelle_cs.database_delete) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Delete;
      }
    }

    /// <summary>Field number for the "has" field.</summary>
    public const int HasFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_has Has {
      get { return msgCase_ == MsgOneofCase.Has ? (global::bluzelle_cs.database_has) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Has;
      }
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_request Keys {
      get { return msgCase_ == MsgOneofCase.Keys ? (global::bluzelle_cs.database_request) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Keys;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_request Size {
      get { return msgCase_ == MsgOneofCase.Size ? (global::bluzelle_cs.database_request) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Size;
      }
    }

    /// <summary>Field number for the "subscribe" field.</summary>
    public const int SubscribeFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_subscribe Subscribe {
      get { return msgCase_ == MsgOneofCase.Subscribe ? (global::bluzelle_cs.database_subscribe) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Subscribe;
      }
    }

    /// <summary>Field number for the "unsubscribe" field.</summary>
    public const int UnsubscribeFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_unsubscribe Unsubscribe {
      get { return msgCase_ == MsgOneofCase.Unsubscribe ? (global::bluzelle_cs.database_unsubscribe) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Unsubscribe;
      }
    }

    /// <summary>Field number for the "nullmsg" field.</summary>
    public const int NullmsgFieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_nullmsg Nullmsg {
      get { return msgCase_ == MsgOneofCase.Nullmsg ? (global::bluzelle_cs.database_nullmsg) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Nullmsg;
      }
    }

    /// <summary>Field number for the "create_db" field.</summary>
    public const int CreateDbFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_request CreateDb {
      get { return msgCase_ == MsgOneofCase.CreateDb ? (global::bluzelle_cs.database_request) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.CreateDb;
      }
    }

    /// <summary>Field number for the "delete_db" field.</summary>
    public const int DeleteDbFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_request DeleteDb {
      get { return msgCase_ == MsgOneofCase.DeleteDb ? (global::bluzelle_cs.database_request) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.DeleteDb;
      }
    }

    /// <summary>Field number for the "has_db" field.</summary>
    public const int HasDbFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_has_db HasDb {
      get { return msgCase_ == MsgOneofCase.HasDb ? (global::bluzelle_cs.database_has_db) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.HasDb;
      }
    }

    /// <summary>Field number for the "writers" field.</summary>
    public const int WritersFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_request Writers {
      get { return msgCase_ == MsgOneofCase.Writers ? (global::bluzelle_cs.database_request) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.Writers;
      }
    }

    /// <summary>Field number for the "add_writers" field.</summary>
    public const int AddWritersFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_writers AddWriters {
      get { return msgCase_ == MsgOneofCase.AddWriters ? (global::bluzelle_cs.database_writers) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.AddWriters;
      }
    }

    /// <summary>Field number for the "remove_writers" field.</summary>
    public const int RemoveWritersFieldNumber = 18;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_writers RemoveWriters {
      get { return msgCase_ == MsgOneofCase.RemoveWriters ? (global::bluzelle_cs.database_writers) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.RemoveWriters;
      }
    }

    /// <summary>Field number for the "quick_read" field.</summary>
    public const int QuickReadFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_read QuickRead {
      get { return msgCase_ == MsgOneofCase.QuickRead ? (global::bluzelle_cs.database_read) msg_ : null; }
      set {
        msg_ = value;
        msgCase_ = value == null ? MsgOneofCase.None : MsgOneofCase.QuickRead;
      }
    }

    private object msg_;
    /// <summary>Enum of possible cases for the "msg" oneof.</summary>
    public enum MsgOneofCase {
      None = 0,
      Create = 2,
      Read = 3,
      Update = 4,
      Delete = 5,
      Has = 6,
      Keys = 7,
      Size = 8,
      Subscribe = 9,
      Unsubscribe = 10,
      Nullmsg = 11,
      CreateDb = 12,
      DeleteDb = 13,
      HasDb = 14,
      Writers = 16,
      AddWriters = 17,
      RemoveWriters = 18,
      QuickRead = 19,
    }
    private MsgOneofCase msgCase_ = MsgOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MsgOneofCase MsgCase {
      get { return msgCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMsg() {
      msgCase_ = MsgOneofCase.None;
      msg_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_msg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_msg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Create, other.Create)) return false;
      if (!object.Equals(Read, other.Read)) return false;
      if (!object.Equals(Update, other.Update)) return false;
      if (!object.Equals(Delete, other.Delete)) return false;
      if (!object.Equals(Has, other.Has)) return false;
      if (!object.Equals(Keys, other.Keys)) return false;
      if (!object.Equals(Size, other.Size)) return false;
      if (!object.Equals(Subscribe, other.Subscribe)) return false;
      if (!object.Equals(Unsubscribe, other.Unsubscribe)) return false;
      if (!object.Equals(Nullmsg, other.Nullmsg)) return false;
      if (!object.Equals(CreateDb, other.CreateDb)) return false;
      if (!object.Equals(DeleteDb, other.DeleteDb)) return false;
      if (!object.Equals(HasDb, other.HasDb)) return false;
      if (!object.Equals(Writers, other.Writers)) return false;
      if (!object.Equals(AddWriters, other.AddWriters)) return false;
      if (!object.Equals(RemoveWriters, other.RemoveWriters)) return false;
      if (!object.Equals(QuickRead, other.QuickRead)) return false;
      if (MsgCase != other.MsgCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (msgCase_ == MsgOneofCase.Create) hash ^= Create.GetHashCode();
      if (msgCase_ == MsgOneofCase.Read) hash ^= Read.GetHashCode();
      if (msgCase_ == MsgOneofCase.Update) hash ^= Update.GetHashCode();
      if (msgCase_ == MsgOneofCase.Delete) hash ^= Delete.GetHashCode();
      if (msgCase_ == MsgOneofCase.Has) hash ^= Has.GetHashCode();
      if (msgCase_ == MsgOneofCase.Keys) hash ^= Keys.GetHashCode();
      if (msgCase_ == MsgOneofCase.Size) hash ^= Size.GetHashCode();
      if (msgCase_ == MsgOneofCase.Subscribe) hash ^= Subscribe.GetHashCode();
      if (msgCase_ == MsgOneofCase.Unsubscribe) hash ^= Unsubscribe.GetHashCode();
      if (msgCase_ == MsgOneofCase.Nullmsg) hash ^= Nullmsg.GetHashCode();
      if (msgCase_ == MsgOneofCase.CreateDb) hash ^= CreateDb.GetHashCode();
      if (msgCase_ == MsgOneofCase.DeleteDb) hash ^= DeleteDb.GetHashCode();
      if (msgCase_ == MsgOneofCase.HasDb) hash ^= HasDb.GetHashCode();
      if (msgCase_ == MsgOneofCase.Writers) hash ^= Writers.GetHashCode();
      if (msgCase_ == MsgOneofCase.AddWriters) hash ^= AddWriters.GetHashCode();
      if (msgCase_ == MsgOneofCase.RemoveWriters) hash ^= RemoveWriters.GetHashCode();
      if (msgCase_ == MsgOneofCase.QuickRead) hash ^= QuickRead.GetHashCode();
      hash ^= (int) msgCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (msgCase_ == MsgOneofCase.Create) {
        output.WriteRawTag(18);
        output.WriteMessage(Create);
      }
      if (msgCase_ == MsgOneofCase.Read) {
        output.WriteRawTag(26);
        output.WriteMessage(Read);
      }
      if (msgCase_ == MsgOneofCase.Update) {
        output.WriteRawTag(34);
        output.WriteMessage(Update);
      }
      if (msgCase_ == MsgOneofCase.Delete) {
        output.WriteRawTag(42);
        output.WriteMessage(Delete);
      }
      if (msgCase_ == MsgOneofCase.Has) {
        output.WriteRawTag(50);
        output.WriteMessage(Has);
      }
      if (msgCase_ == MsgOneofCase.Keys) {
        output.WriteRawTag(58);
        output.WriteMessage(Keys);
      }
      if (msgCase_ == MsgOneofCase.Size) {
        output.WriteRawTag(66);
        output.WriteMessage(Size);
      }
      if (msgCase_ == MsgOneofCase.Subscribe) {
        output.WriteRawTag(74);
        output.WriteMessage(Subscribe);
      }
      if (msgCase_ == MsgOneofCase.Unsubscribe) {
        output.WriteRawTag(82);
        output.WriteMessage(Unsubscribe);
      }
      if (msgCase_ == MsgOneofCase.Nullmsg) {
        output.WriteRawTag(90);
        output.WriteMessage(Nullmsg);
      }
      if (msgCase_ == MsgOneofCase.CreateDb) {
        output.WriteRawTag(98);
        output.WriteMessage(CreateDb);
      }
      if (msgCase_ == MsgOneofCase.DeleteDb) {
        output.WriteRawTag(106);
        output.WriteMessage(DeleteDb);
      }
      if (msgCase_ == MsgOneofCase.HasDb) {
        output.WriteRawTag(114);
        output.WriteMessage(HasDb);
      }
      if (msgCase_ == MsgOneofCase.Writers) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Writers);
      }
      if (msgCase_ == MsgOneofCase.AddWriters) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(AddWriters);
      }
      if (msgCase_ == MsgOneofCase.RemoveWriters) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(RemoveWriters);
      }
      if (msgCase_ == MsgOneofCase.QuickRead) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(QuickRead);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (msgCase_ == MsgOneofCase.Create) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Create);
      }
      if (msgCase_ == MsgOneofCase.Read) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Read);
      }
      if (msgCase_ == MsgOneofCase.Update) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Update);
      }
      if (msgCase_ == MsgOneofCase.Delete) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Delete);
      }
      if (msgCase_ == MsgOneofCase.Has) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Has);
      }
      if (msgCase_ == MsgOneofCase.Keys) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Keys);
      }
      if (msgCase_ == MsgOneofCase.Size) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Size);
      }
      if (msgCase_ == MsgOneofCase.Subscribe) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Subscribe);
      }
      if (msgCase_ == MsgOneofCase.Unsubscribe) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unsubscribe);
      }
      if (msgCase_ == MsgOneofCase.Nullmsg) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nullmsg);
      }
      if (msgCase_ == MsgOneofCase.CreateDb) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateDb);
      }
      if (msgCase_ == MsgOneofCase.DeleteDb) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeleteDb);
      }
      if (msgCase_ == MsgOneofCase.HasDb) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HasDb);
      }
      if (msgCase_ == MsgOneofCase.Writers) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Writers);
      }
      if (msgCase_ == MsgOneofCase.AddWriters) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AddWriters);
      }
      if (msgCase_ == MsgOneofCase.RemoveWriters) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RemoveWriters);
      }
      if (msgCase_ == MsgOneofCase.QuickRead) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(QuickRead);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_msg other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::bluzelle_cs.database_header();
        }
        Header.MergeFrom(other.Header);
      }
      switch (other.MsgCase) {
        case MsgOneofCase.Create:
          if (Create == null) {
            Create = new global::bluzelle_cs.database_create();
          }
          Create.MergeFrom(other.Create);
          break;
        case MsgOneofCase.Read:
          if (Read == null) {
            Read = new global::bluzelle_cs.database_read();
          }
          Read.MergeFrom(other.Read);
          break;
        case MsgOneofCase.Update:
          if (Update == null) {
            Update = new global::bluzelle_cs.database_update();
          }
          Update.MergeFrom(other.Update);
          break;
        case MsgOneofCase.Delete:
          if (Delete == null) {
            Delete = new global::bluzelle_cs.database_delete();
          }
          Delete.MergeFrom(other.Delete);
          break;
        case MsgOneofCase.Has:
          if (Has == null) {
            Has = new global::bluzelle_cs.database_has();
          }
          Has.MergeFrom(other.Has);
          break;
        case MsgOneofCase.Keys:
          if (Keys == null) {
            Keys = new global::bluzelle_cs.database_request();
          }
          Keys.MergeFrom(other.Keys);
          break;
        case MsgOneofCase.Size:
          if (Size == null) {
            Size = new global::bluzelle_cs.database_request();
          }
          Size.MergeFrom(other.Size);
          break;
        case MsgOneofCase.Subscribe:
          if (Subscribe == null) {
            Subscribe = new global::bluzelle_cs.database_subscribe();
          }
          Subscribe.MergeFrom(other.Subscribe);
          break;
        case MsgOneofCase.Unsubscribe:
          if (Unsubscribe == null) {
            Unsubscribe = new global::bluzelle_cs.database_unsubscribe();
          }
          Unsubscribe.MergeFrom(other.Unsubscribe);
          break;
        case MsgOneofCase.Nullmsg:
          if (Nullmsg == null) {
            Nullmsg = new global::bluzelle_cs.database_nullmsg();
          }
          Nullmsg.MergeFrom(other.Nullmsg);
          break;
        case MsgOneofCase.CreateDb:
          if (CreateDb == null) {
            CreateDb = new global::bluzelle_cs.database_request();
          }
          CreateDb.MergeFrom(other.CreateDb);
          break;
        case MsgOneofCase.DeleteDb:
          if (DeleteDb == null) {
            DeleteDb = new global::bluzelle_cs.database_request();
          }
          DeleteDb.MergeFrom(other.DeleteDb);
          break;
        case MsgOneofCase.HasDb:
          if (HasDb == null) {
            HasDb = new global::bluzelle_cs.database_has_db();
          }
          HasDb.MergeFrom(other.HasDb);
          break;
        case MsgOneofCase.Writers:
          if (Writers == null) {
            Writers = new global::bluzelle_cs.database_request();
          }
          Writers.MergeFrom(other.Writers);
          break;
        case MsgOneofCase.AddWriters:
          if (AddWriters == null) {
            AddWriters = new global::bluzelle_cs.database_writers();
          }
          AddWriters.MergeFrom(other.AddWriters);
          break;
        case MsgOneofCase.RemoveWriters:
          if (RemoveWriters == null) {
            RemoveWriters = new global::bluzelle_cs.database_writers();
          }
          RemoveWriters.MergeFrom(other.RemoveWriters);
          break;
        case MsgOneofCase.QuickRead:
          if (QuickRead == null) {
            QuickRead = new global::bluzelle_cs.database_read();
          }
          QuickRead.MergeFrom(other.QuickRead);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              header_ = new global::bluzelle_cs.database_header();
            }
            input.ReadMessage(header_);
            break;
          }
          case 18: {
            global::bluzelle_cs.database_create subBuilder = new global::bluzelle_cs.database_create();
            if (msgCase_ == MsgOneofCase.Create) {
              subBuilder.MergeFrom(Create);
            }
            input.ReadMessage(subBuilder);
            Create = subBuilder;
            break;
          }
          case 26: {
            global::bluzelle_cs.database_read subBuilder = new global::bluzelle_cs.database_read();
            if (msgCase_ == MsgOneofCase.Read) {
              subBuilder.MergeFrom(Read);
            }
            input.ReadMessage(subBuilder);
            Read = subBuilder;
            break;
          }
          case 34: {
            global::bluzelle_cs.database_update subBuilder = new global::bluzelle_cs.database_update();
            if (msgCase_ == MsgOneofCase.Update) {
              subBuilder.MergeFrom(Update);
            }
            input.ReadMessage(subBuilder);
            Update = subBuilder;
            break;
          }
          case 42: {
            global::bluzelle_cs.database_delete subBuilder = new global::bluzelle_cs.database_delete();
            if (msgCase_ == MsgOneofCase.Delete) {
              subBuilder.MergeFrom(Delete);
            }
            input.ReadMessage(subBuilder);
            Delete = subBuilder;
            break;
          }
          case 50: {
            global::bluzelle_cs.database_has subBuilder = new global::bluzelle_cs.database_has();
            if (msgCase_ == MsgOneofCase.Has) {
              subBuilder.MergeFrom(Has);
            }
            input.ReadMessage(subBuilder);
            Has = subBuilder;
            break;
          }
          case 58: {
            global::bluzelle_cs.database_request subBuilder = new global::bluzelle_cs.database_request();
            if (msgCase_ == MsgOneofCase.Keys) {
              subBuilder.MergeFrom(Keys);
            }
            input.ReadMessage(subBuilder);
            Keys = subBuilder;
            break;
          }
          case 66: {
            global::bluzelle_cs.database_request subBuilder = new global::bluzelle_cs.database_request();
            if (msgCase_ == MsgOneofCase.Size) {
              subBuilder.MergeFrom(Size);
            }
            input.ReadMessage(subBuilder);
            Size = subBuilder;
            break;
          }
          case 74: {
            global::bluzelle_cs.database_subscribe subBuilder = new global::bluzelle_cs.database_subscribe();
            if (msgCase_ == MsgOneofCase.Subscribe) {
              subBuilder.MergeFrom(Subscribe);
            }
            input.ReadMessage(subBuilder);
            Subscribe = subBuilder;
            break;
          }
          case 82: {
            global::bluzelle_cs.database_unsubscribe subBuilder = new global::bluzelle_cs.database_unsubscribe();
            if (msgCase_ == MsgOneofCase.Unsubscribe) {
              subBuilder.MergeFrom(Unsubscribe);
            }
            input.ReadMessage(subBuilder);
            Unsubscribe = subBuilder;
            break;
          }
          case 90: {
            global::bluzelle_cs.database_nullmsg subBuilder = new global::bluzelle_cs.database_nullmsg();
            if (msgCase_ == MsgOneofCase.Nullmsg) {
              subBuilder.MergeFrom(Nullmsg);
            }
            input.ReadMessage(subBuilder);
            Nullmsg = subBuilder;
            break;
          }
          case 98: {
            global::bluzelle_cs.database_request subBuilder = new global::bluzelle_cs.database_request();
            if (msgCase_ == MsgOneofCase.CreateDb) {
              subBuilder.MergeFrom(CreateDb);
            }
            input.ReadMessage(subBuilder);
            CreateDb = subBuilder;
            break;
          }
          case 106: {
            global::bluzelle_cs.database_request subBuilder = new global::bluzelle_cs.database_request();
            if (msgCase_ == MsgOneofCase.DeleteDb) {
              subBuilder.MergeFrom(DeleteDb);
            }
            input.ReadMessage(subBuilder);
            DeleteDb = subBuilder;
            break;
          }
          case 114: {
            global::bluzelle_cs.database_has_db subBuilder = new global::bluzelle_cs.database_has_db();
            if (msgCase_ == MsgOneofCase.HasDb) {
              subBuilder.MergeFrom(HasDb);
            }
            input.ReadMessage(subBuilder);
            HasDb = subBuilder;
            break;
          }
          case 130: {
            global::bluzelle_cs.database_request subBuilder = new global::bluzelle_cs.database_request();
            if (msgCase_ == MsgOneofCase.Writers) {
              subBuilder.MergeFrom(Writers);
            }
            input.ReadMessage(subBuilder);
            Writers = subBuilder;
            break;
          }
          case 138: {
            global::bluzelle_cs.database_writers subBuilder = new global::bluzelle_cs.database_writers();
            if (msgCase_ == MsgOneofCase.AddWriters) {
              subBuilder.MergeFrom(AddWriters);
            }
            input.ReadMessage(subBuilder);
            AddWriters = subBuilder;
            break;
          }
          case 146: {
            global::bluzelle_cs.database_writers subBuilder = new global::bluzelle_cs.database_writers();
            if (msgCase_ == MsgOneofCase.RemoveWriters) {
              subBuilder.MergeFrom(RemoveWriters);
            }
            input.ReadMessage(subBuilder);
            RemoveWriters = subBuilder;
            break;
          }
          case 154: {
            global::bluzelle_cs.database_read subBuilder = new global::bluzelle_cs.database_read();
            if (msgCase_ == MsgOneofCase.QuickRead) {
              subBuilder.MergeFrom(QuickRead);
            }
            input.ReadMessage(subBuilder);
            QuickRead = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_header : pb::IMessage<database_header> {
    private static readonly pb::MessageParser<database_header> _parser = new pb::MessageParser<database_header>(() => new database_header());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_header> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_header() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_header(database_header other) : this() {
      dbUuid_ = other.dbUuid_;
      nonce_ = other.nonce_;
      pointOfContact_ = other.pointOfContact_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_header Clone() {
      return new database_header(this);
    }

    /// <summary>Field number for the "db_uuid" field.</summary>
    public const int DbUuidFieldNumber = 1;
    private string dbUuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DbUuid {
      get { return dbUuid_; }
      set {
        dbUuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 2;
    private ulong nonce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Nonce {
      get { return nonce_; }
      set {
        nonce_ = value;
      }
    }

    /// <summary>Field number for the "point_of_contact" field.</summary>
    public const int PointOfContactFieldNumber = 3;
    private pb::ByteString pointOfContact_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PointOfContact {
      get { return pointOfContact_; }
      set {
        pointOfContact_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_header);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_header other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DbUuid != other.DbUuid) return false;
      if (Nonce != other.Nonce) return false;
      if (PointOfContact != other.PointOfContact) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DbUuid.Length != 0) hash ^= DbUuid.GetHashCode();
      if (Nonce != 0UL) hash ^= Nonce.GetHashCode();
      if (PointOfContact.Length != 0) hash ^= PointOfContact.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DbUuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DbUuid);
      }
      if (Nonce != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Nonce);
      }
      if (PointOfContact.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(PointOfContact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DbUuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DbUuid);
      }
      if (Nonce != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Nonce);
      }
      if (PointOfContact.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PointOfContact);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_header other) {
      if (other == null) {
        return;
      }
      if (other.DbUuid.Length != 0) {
        DbUuid = other.DbUuid;
      }
      if (other.Nonce != 0UL) {
        Nonce = other.Nonce;
      }
      if (other.PointOfContact.Length != 0) {
        PointOfContact = other.PointOfContact;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DbUuid = input.ReadString();
            break;
          }
          case 16: {
            Nonce = input.ReadUInt64();
            break;
          }
          case 26: {
            PointOfContact = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_create : pb::IMessage<database_create> {
    private static readonly pb::MessageParser<database_create> _parser = new pb::MessageParser<database_create>(() => new database_create());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_create> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_create() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_create(database_create other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_create Clone() {
      return new database_create(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_create);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_create other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_create other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_read : pb::IMessage<database_read> {
    private static readonly pb::MessageParser<database_read> _parser = new pb::MessageParser<database_read>(() => new database_read());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_read> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_read() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_read(database_read other) : this() {
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_read Clone() {
      return new database_read(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_read);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_read other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_read other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_update : pb::IMessage<database_update> {
    private static readonly pb::MessageParser<database_update> _parser = new pb::MessageParser<database_update>(() => new database_update());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_update> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_update() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_update(database_update other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_update Clone() {
      return new database_update(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_update);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_update other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_update other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_delete : pb::IMessage<database_delete> {
    private static readonly pb::MessageParser<database_delete> _parser = new pb::MessageParser<database_delete>(() => new database_delete());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_delete> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_delete() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_delete(database_delete other) : this() {
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_delete Clone() {
      return new database_delete(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_delete);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_delete other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_delete other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_subscribe : pb::IMessage<database_subscribe> {
    private static readonly pb::MessageParser<database_subscribe> _parser = new pb::MessageParser<database_subscribe>(() => new database_subscribe());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_subscribe> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_subscribe() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_subscribe(database_subscribe other) : this() {
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_subscribe Clone() {
      return new database_subscribe(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_subscribe);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_subscribe other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_subscribe other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_unsubscribe : pb::IMessage<database_unsubscribe> {
    private static readonly pb::MessageParser<database_unsubscribe> _parser = new pb::MessageParser<database_unsubscribe>(() => new database_unsubscribe());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_unsubscribe> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_unsubscribe() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_unsubscribe(database_unsubscribe other) : this() {
      key_ = other.key_;
      nonce_ = other.nonce_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_unsubscribe Clone() {
      return new database_unsubscribe(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 2;
    private ulong nonce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Nonce {
      get { return nonce_; }
      set {
        nonce_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_unsubscribe);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_unsubscribe other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Nonce != other.Nonce) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Nonce != 0UL) hash ^= Nonce.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Nonce != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Nonce);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Nonce != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Nonce);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_unsubscribe other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Nonce != 0UL) {
        Nonce = other.Nonce;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 16: {
            Nonce = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_has : pb::IMessage<database_has> {
    private static readonly pb::MessageParser<database_has> _parser = new pb::MessageParser<database_has>(() => new database_has());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_has> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_has() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_has(database_has other) : this() {
      key_ = other.key_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_has Clone() {
      return new database_has(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_has);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_has other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_has other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_has_db : pb::IMessage<database_has_db> {
    private static readonly pb::MessageParser<database_has_db> _parser = new pb::MessageParser<database_has_db>(() => new database_has_db());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_has_db> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_has_db() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_has_db(database_has_db other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_has_db Clone() {
      return new database_has_db(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_has_db);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_has_db other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_has_db other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class database_writers : pb::IMessage<database_writers> {
    private static readonly pb::MessageParser<database_writers> _parser = new pb::MessageParser<database_writers>(() => new database_writers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_writers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_writers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_writers(database_writers other) : this() {
      writers_ = other.writers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_writers Clone() {
      return new database_writers(this);
    }

    /// <summary>Field number for the "writers" field.</summary>
    public const int WritersFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_writers_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> writers_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Writers {
      get { return writers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_writers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_writers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!writers_.Equals(other.writers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= writers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      writers_.WriteTo(output, _repeated_writers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += writers_.CalculateSize(_repeated_writers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_writers other) {
      if (other == null) {
        return;
      }
      writers_.Add(other.writers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            writers_.AddEntriesFrom(input, _repeated_writers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_subscription_update : pb::IMessage<database_subscription_update> {
    private static readonly pb::MessageParser<database_subscription_update> _parser = new pb::MessageParser<database_subscription_update>(() => new database_subscription_update());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_subscription_update> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_subscription_update() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_subscription_update(database_subscription_update other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      operation_ = other.operation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_subscription_update Clone() {
      return new database_subscription_update(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "operation" field.</summary>
    public const int OperationFieldNumber = 3;
    private global::bluzelle_cs.database_subscription_update.Types.operation_type operation_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_subscription_update.Types.operation_type Operation {
      get { return operation_; }
      set {
        operation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_subscription_update);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_subscription_update other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      if (Operation != other.Operation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (Operation != 0) hash ^= Operation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (Operation != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Operation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (Operation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Operation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_subscription_update other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.Operation != 0) {
        Operation = other.Operation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
          case 24: {
            operation_ = (global::bluzelle_cs.database_subscription_update.Types.operation_type) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the database_subscription_update message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum operation_type {
        [pbr::OriginalName("UPDATE")] Update = 0,
        [pbr::OriginalName("DELETE")] Delete = 1,
      }

    }
    #endregion

  }

  public sealed partial class database_redirect_response : pb::IMessage<database_redirect_response> {
    private static readonly pb::MessageParser<database_redirect_response> _parser = new pb::MessageParser<database_redirect_response>(() => new database_redirect_response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_redirect_response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_redirect_response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_redirect_response(database_redirect_response other) : this() {
      leaderId_ = other.leaderId_;
      leaderName_ = other.leaderName_;
      leaderHost_ = other.leaderHost_;
      leaderPort_ = other.leaderPort_;
      leaderHttpPort_ = other.leaderHttpPort_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_redirect_response Clone() {
      return new database_redirect_response(this);
    }

    /// <summary>Field number for the "leader_id" field.</summary>
    public const int LeaderIdFieldNumber = 1;
    private string leaderId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LeaderId {
      get { return leaderId_; }
      set {
        leaderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "leader_name" field.</summary>
    public const int LeaderNameFieldNumber = 2;
    private string leaderName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LeaderName {
      get { return leaderName_; }
      set {
        leaderName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "leader_host" field.</summary>
    public const int LeaderHostFieldNumber = 3;
    private string leaderHost_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LeaderHost {
      get { return leaderHost_; }
      set {
        leaderHost_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "leader_port" field.</summary>
    public const int LeaderPortFieldNumber = 4;
    private uint leaderPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint LeaderPort {
      get { return leaderPort_; }
      set {
        leaderPort_ = value;
      }
    }

    /// <summary>Field number for the "leader_http_port" field.</summary>
    public const int LeaderHttpPortFieldNumber = 5;
    private uint leaderHttpPort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint LeaderHttpPort {
      get { return leaderHttpPort_; }
      set {
        leaderHttpPort_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_redirect_response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_redirect_response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LeaderId != other.LeaderId) return false;
      if (LeaderName != other.LeaderName) return false;
      if (LeaderHost != other.LeaderHost) return false;
      if (LeaderPort != other.LeaderPort) return false;
      if (LeaderHttpPort != other.LeaderHttpPort) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LeaderId.Length != 0) hash ^= LeaderId.GetHashCode();
      if (LeaderName.Length != 0) hash ^= LeaderName.GetHashCode();
      if (LeaderHost.Length != 0) hash ^= LeaderHost.GetHashCode();
      if (LeaderPort != 0) hash ^= LeaderPort.GetHashCode();
      if (LeaderHttpPort != 0) hash ^= LeaderHttpPort.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LeaderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LeaderId);
      }
      if (LeaderName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LeaderName);
      }
      if (LeaderHost.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LeaderHost);
      }
      if (LeaderPort != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(LeaderPort);
      }
      if (LeaderHttpPort != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(LeaderHttpPort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LeaderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderId);
      }
      if (LeaderName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderName);
      }
      if (LeaderHost.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LeaderHost);
      }
      if (LeaderPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LeaderPort);
      }
      if (LeaderHttpPort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(LeaderHttpPort);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_redirect_response other) {
      if (other == null) {
        return;
      }
      if (other.LeaderId.Length != 0) {
        LeaderId = other.LeaderId;
      }
      if (other.LeaderName.Length != 0) {
        LeaderName = other.LeaderName;
      }
      if (other.LeaderHost.Length != 0) {
        LeaderHost = other.LeaderHost;
      }
      if (other.LeaderPort != 0) {
        LeaderPort = other.LeaderPort;
      }
      if (other.LeaderHttpPort != 0) {
        LeaderHttpPort = other.LeaderHttpPort;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LeaderId = input.ReadString();
            break;
          }
          case 18: {
            LeaderName = input.ReadString();
            break;
          }
          case 26: {
            LeaderHost = input.ReadString();
            break;
          }
          case 32: {
            LeaderPort = input.ReadUInt32();
            break;
          }
          case 40: {
            LeaderHttpPort = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_has_response : pb::IMessage<database_has_response> {
    private static readonly pb::MessageParser<database_has_response> _parser = new pb::MessageParser<database_has_response>(() => new database_has_response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_has_response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_has_response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_has_response(database_has_response other) : this() {
      key_ = other.key_;
      has_ = other.has_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_has_response Clone() {
      return new database_has_response(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "has" field.</summary>
    public const int HasFieldNumber = 2;
    private bool has_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Has {
      get { return has_; }
      set {
        has_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_has_response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_has_response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Has != other.Has) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Has != false) hash ^= Has.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Has != false) {
        output.WriteRawTag(16);
        output.WriteBool(Has);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Has != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_has_response other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Has != false) {
        Has = other.Has;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 16: {
            Has = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_has_db_response : pb::IMessage<database_has_db_response> {
    private static readonly pb::MessageParser<database_has_db_response> _parser = new pb::MessageParser<database_has_db_response>(() => new database_has_db_response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_has_db_response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_has_db_response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_has_db_response(database_has_db_response other) : this() {
      uuid_ = other.uuid_;
      has_ = other.has_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_has_db_response Clone() {
      return new database_has_db_response(this);
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 1;
    private string uuid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uuid {
      get { return uuid_; }
      set {
        uuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "has" field.</summary>
    public const int HasFieldNumber = 2;
    private bool has_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Has {
      get { return has_; }
      set {
        has_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_has_db_response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_has_db_response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uuid != other.Uuid) return false;
      if (Has != other.Has) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uuid.Length != 0) hash ^= Uuid.GetHashCode();
      if (Has != false) hash ^= Has.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uuid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Uuid);
      }
      if (Has != false) {
        output.WriteRawTag(16);
        output.WriteBool(Has);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uuid);
      }
      if (Has != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_has_db_response other) {
      if (other == null) {
        return;
      }
      if (other.Uuid.Length != 0) {
        Uuid = other.Uuid;
      }
      if (other.Has != false) {
        Has = other.Has;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Uuid = input.ReadString();
            break;
          }
          case 16: {
            Has = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_keys_response : pb::IMessage<database_keys_response> {
    private static readonly pb::MessageParser<database_keys_response> _parser = new pb::MessageParser<database_keys_response>(() => new database_keys_response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_keys_response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_keys_response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_keys_response(database_keys_response other) : this() {
      keys_ = other.keys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_keys_response Clone() {
      return new database_keys_response(this);
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_keys_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> keys_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Keys {
      get { return keys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_keys_response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_keys_response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!keys_.Equals(other.keys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= keys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      keys_.WriteTo(output, _repeated_keys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += keys_.CalculateSize(_repeated_keys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_keys_response other) {
      if (other == null) {
        return;
      }
      keys_.Add(other.keys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            keys_.AddEntriesFrom(input, _repeated_keys_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_read_response : pb::IMessage<database_read_response> {
    private static readonly pb::MessageParser<database_read_response> _parser = new pb::MessageParser<database_read_response>(() => new database_read_response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_read_response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_read_response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_read_response(database_read_response other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_read_response Clone() {
      return new database_read_response(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private pb::ByteString value_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_read_response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_read_response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_read_response other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_size_response : pb::IMessage<database_size_response> {
    private static readonly pb::MessageParser<database_size_response> _parser = new pb::MessageParser<database_size_response>(() => new database_size_response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_size_response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_size_response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_size_response(database_size_response other) : this() {
      bytes_ = other.bytes_;
      keys_ = other.keys_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_size_response Clone() {
      return new database_size_response(this);
    }

    /// <summary>Field number for the "bytes" field.</summary>
    public const int BytesFieldNumber = 1;
    private int bytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Bytes {
      get { return bytes_; }
      set {
        bytes_ = value;
      }
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 2;
    private int keys_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Keys {
      get { return keys_; }
      set {
        keys_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_size_response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_size_response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bytes != other.Bytes) return false;
      if (Keys != other.Keys) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bytes != 0) hash ^= Bytes.GetHashCode();
      if (Keys != 0) hash ^= Keys.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bytes != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Bytes);
      }
      if (Keys != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Keys);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bytes != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Bytes);
      }
      if (Keys != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Keys);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_size_response other) {
      if (other == null) {
        return;
      }
      if (other.Bytes != 0) {
        Bytes = other.Bytes;
      }
      if (other.Keys != 0) {
        Keys = other.Keys;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Bytes = input.ReadInt32();
            break;
          }
          case 16: {
            Keys = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_request : pb::IMessage<database_request> {
    private static readonly pb::MessageParser<database_request> _parser = new pb::MessageParser<database_request>(() => new database_request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_request(database_request other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_request Clone() {
      return new database_request(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_request other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class database_writers_response : pb::IMessage<database_writers_response> {
    private static readonly pb::MessageParser<database_writers_response> _parser = new pb::MessageParser<database_writers_response>(() => new database_writers_response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_writers_response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_writers_response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_writers_response(database_writers_response other) : this() {
      owner_ = other.owner_;
      writers_ = other.writers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_writers_response Clone() {
      return new database_writers_response(this);
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 1;
    private string owner_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "writers" field.</summary>
    public const int WritersFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_writers_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> writers_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Writers {
      get { return writers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_writers_response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_writers_response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Owner != other.Owner) return false;
      if(!writers_.Equals(other.writers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      hash ^= writers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Owner.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Owner);
      }
      writers_.WriteTo(output, _repeated_writers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      size += writers_.CalculateSize(_repeated_writers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_writers_response other) {
      if (other == null) {
        return;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      writers_.Add(other.writers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Owner = input.ReadString();
            break;
          }
          case 18: {
            writers_.AddEntriesFrom(input, _repeated_writers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_error : pb::IMessage<database_error> {
    private static readonly pb::MessageParser<database_error> _parser = new pb::MessageParser<database_error>(() => new database_error());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_error> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_error() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_error(database_error other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_error Clone() {
      return new database_error(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_error);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_error other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_error other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_response : pb::IMessage<database_response> {
    private static readonly pb::MessageParser<database_response> _parser = new pb::MessageParser<database_response>(() => new database_response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_response(database_response other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      switch (other.ResponseCase) {
        case ResponseOneofCase.Redirect:
          Redirect = other.Redirect.Clone();
          break;
        case ResponseOneofCase.SubscriptionUpdate:
          SubscriptionUpdate = other.SubscriptionUpdate.Clone();
          break;
        case ResponseOneofCase.Read:
          Read = other.Read.Clone();
          break;
        case ResponseOneofCase.Has:
          Has = other.Has.Clone();
          break;
        case ResponseOneofCase.Keys:
          Keys = other.Keys.Clone();
          break;
        case ResponseOneofCase.Size:
          Size = other.Size.Clone();
          break;
        case ResponseOneofCase.Error:
          Error = other.Error.Clone();
          break;
        case ResponseOneofCase.HasDb:
          HasDb = other.HasDb.Clone();
          break;
        case ResponseOneofCase.Writers:
          Writers = other.Writers.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_response Clone() {
      return new database_response(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::bluzelle_cs.database_header header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_header Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "redirect" field.</summary>
    public const int RedirectFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_redirect_response Redirect {
      get { return responseCase_ == ResponseOneofCase.Redirect ? (global::bluzelle_cs.database_redirect_response) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Redirect;
      }
    }

    /// <summary>Field number for the "subscription_update" field.</summary>
    public const int SubscriptionUpdateFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_subscription_update SubscriptionUpdate {
      get { return responseCase_ == ResponseOneofCase.SubscriptionUpdate ? (global::bluzelle_cs.database_subscription_update) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.SubscriptionUpdate;
      }
    }

    /// <summary>Field number for the "read" field.</summary>
    public const int ReadFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_read_response Read {
      get { return responseCase_ == ResponseOneofCase.Read ? (global::bluzelle_cs.database_read_response) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Read;
      }
    }

    /// <summary>Field number for the "has" field.</summary>
    public const int HasFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_has_response Has {
      get { return responseCase_ == ResponseOneofCase.Has ? (global::bluzelle_cs.database_has_response) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Has;
      }
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_keys_response Keys {
      get { return responseCase_ == ResponseOneofCase.Keys ? (global::bluzelle_cs.database_keys_response) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Keys;
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_size_response Size {
      get { return responseCase_ == ResponseOneofCase.Size ? (global::bluzelle_cs.database_size_response) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Size;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_error Error {
      get { return responseCase_ == ResponseOneofCase.Error ? (global::bluzelle_cs.database_error) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Error;
      }
    }

    /// <summary>Field number for the "has_db" field.</summary>
    public const int HasDbFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_has_db_response HasDb {
      get { return responseCase_ == ResponseOneofCase.HasDb ? (global::bluzelle_cs.database_has_db_response) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.HasDb;
      }
    }

    /// <summary>Field number for the "writers" field.</summary>
    public const int WritersFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::bluzelle_cs.database_writers_response Writers {
      get { return responseCase_ == ResponseOneofCase.Writers ? (global::bluzelle_cs.database_writers_response) response_ : null; }
      set {
        response_ = value;
        responseCase_ = value == null ? ResponseOneofCase.None : ResponseOneofCase.Writers;
      }
    }

    private object response_;
    /// <summary>Enum of possible cases for the "response" oneof.</summary>
    public enum ResponseOneofCase {
      None = 0,
      Redirect = 2,
      SubscriptionUpdate = 3,
      Read = 4,
      Has = 5,
      Keys = 6,
      Size = 7,
      Error = 8,
      HasDb = 9,
      Writers = 10,
    }
    private ResponseOneofCase responseCase_ = ResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofCase ResponseCase {
      get { return responseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponse() {
      responseCase_ = ResponseOneofCase.None;
      response_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Redirect, other.Redirect)) return false;
      if (!object.Equals(SubscriptionUpdate, other.SubscriptionUpdate)) return false;
      if (!object.Equals(Read, other.Read)) return false;
      if (!object.Equals(Has, other.Has)) return false;
      if (!object.Equals(Keys, other.Keys)) return false;
      if (!object.Equals(Size, other.Size)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(HasDb, other.HasDb)) return false;
      if (!object.Equals(Writers, other.Writers)) return false;
      if (ResponseCase != other.ResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Redirect) hash ^= Redirect.GetHashCode();
      if (responseCase_ == ResponseOneofCase.SubscriptionUpdate) hash ^= SubscriptionUpdate.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Read) hash ^= Read.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Has) hash ^= Has.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Keys) hash ^= Keys.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Size) hash ^= Size.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Error) hash ^= Error.GetHashCode();
      if (responseCase_ == ResponseOneofCase.HasDb) hash ^= HasDb.GetHashCode();
      if (responseCase_ == ResponseOneofCase.Writers) hash ^= Writers.GetHashCode();
      hash ^= (int) responseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (responseCase_ == ResponseOneofCase.Redirect) {
        output.WriteRawTag(18);
        output.WriteMessage(Redirect);
      }
      if (responseCase_ == ResponseOneofCase.SubscriptionUpdate) {
        output.WriteRawTag(26);
        output.WriteMessage(SubscriptionUpdate);
      }
      if (responseCase_ == ResponseOneofCase.Read) {
        output.WriteRawTag(34);
        output.WriteMessage(Read);
      }
      if (responseCase_ == ResponseOneofCase.Has) {
        output.WriteRawTag(42);
        output.WriteMessage(Has);
      }
      if (responseCase_ == ResponseOneofCase.Keys) {
        output.WriteRawTag(50);
        output.WriteMessage(Keys);
      }
      if (responseCase_ == ResponseOneofCase.Size) {
        output.WriteRawTag(58);
        output.WriteMessage(Size);
      }
      if (responseCase_ == ResponseOneofCase.Error) {
        output.WriteRawTag(66);
        output.WriteMessage(Error);
      }
      if (responseCase_ == ResponseOneofCase.HasDb) {
        output.WriteRawTag(74);
        output.WriteMessage(HasDb);
      }
      if (responseCase_ == ResponseOneofCase.Writers) {
        output.WriteRawTag(82);
        output.WriteMessage(Writers);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (responseCase_ == ResponseOneofCase.Redirect) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Redirect);
      }
      if (responseCase_ == ResponseOneofCase.SubscriptionUpdate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscriptionUpdate);
      }
      if (responseCase_ == ResponseOneofCase.Read) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Read);
      }
      if (responseCase_ == ResponseOneofCase.Has) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Has);
      }
      if (responseCase_ == ResponseOneofCase.Keys) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Keys);
      }
      if (responseCase_ == ResponseOneofCase.Size) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Size);
      }
      if (responseCase_ == ResponseOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (responseCase_ == ResponseOneofCase.HasDb) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HasDb);
      }
      if (responseCase_ == ResponseOneofCase.Writers) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Writers);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_response other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          header_ = new global::bluzelle_cs.database_header();
        }
        Header.MergeFrom(other.Header);
      }
      switch (other.ResponseCase) {
        case ResponseOneofCase.Redirect:
          if (Redirect == null) {
            Redirect = new global::bluzelle_cs.database_redirect_response();
          }
          Redirect.MergeFrom(other.Redirect);
          break;
        case ResponseOneofCase.SubscriptionUpdate:
          if (SubscriptionUpdate == null) {
            SubscriptionUpdate = new global::bluzelle_cs.database_subscription_update();
          }
          SubscriptionUpdate.MergeFrom(other.SubscriptionUpdate);
          break;
        case ResponseOneofCase.Read:
          if (Read == null) {
            Read = new global::bluzelle_cs.database_read_response();
          }
          Read.MergeFrom(other.Read);
          break;
        case ResponseOneofCase.Has:
          if (Has == null) {
            Has = new global::bluzelle_cs.database_has_response();
          }
          Has.MergeFrom(other.Has);
          break;
        case ResponseOneofCase.Keys:
          if (Keys == null) {
            Keys = new global::bluzelle_cs.database_keys_response();
          }
          Keys.MergeFrom(other.Keys);
          break;
        case ResponseOneofCase.Size:
          if (Size == null) {
            Size = new global::bluzelle_cs.database_size_response();
          }
          Size.MergeFrom(other.Size);
          break;
        case ResponseOneofCase.Error:
          if (Error == null) {
            Error = new global::bluzelle_cs.database_error();
          }
          Error.MergeFrom(other.Error);
          break;
        case ResponseOneofCase.HasDb:
          if (HasDb == null) {
            HasDb = new global::bluzelle_cs.database_has_db_response();
          }
          HasDb.MergeFrom(other.HasDb);
          break;
        case ResponseOneofCase.Writers:
          if (Writers == null) {
            Writers = new global::bluzelle_cs.database_writers_response();
          }
          Writers.MergeFrom(other.Writers);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              header_ = new global::bluzelle_cs.database_header();
            }
            input.ReadMessage(header_);
            break;
          }
          case 18: {
            global::bluzelle_cs.database_redirect_response subBuilder = new global::bluzelle_cs.database_redirect_response();
            if (responseCase_ == ResponseOneofCase.Redirect) {
              subBuilder.MergeFrom(Redirect);
            }
            input.ReadMessage(subBuilder);
            Redirect = subBuilder;
            break;
          }
          case 26: {
            global::bluzelle_cs.database_subscription_update subBuilder = new global::bluzelle_cs.database_subscription_update();
            if (responseCase_ == ResponseOneofCase.SubscriptionUpdate) {
              subBuilder.MergeFrom(SubscriptionUpdate);
            }
            input.ReadMessage(subBuilder);
            SubscriptionUpdate = subBuilder;
            break;
          }
          case 34: {
            global::bluzelle_cs.database_read_response subBuilder = new global::bluzelle_cs.database_read_response();
            if (responseCase_ == ResponseOneofCase.Read) {
              subBuilder.MergeFrom(Read);
            }
            input.ReadMessage(subBuilder);
            Read = subBuilder;
            break;
          }
          case 42: {
            global::bluzelle_cs.database_has_response subBuilder = new global::bluzelle_cs.database_has_response();
            if (responseCase_ == ResponseOneofCase.Has) {
              subBuilder.MergeFrom(Has);
            }
            input.ReadMessage(subBuilder);
            Has = subBuilder;
            break;
          }
          case 50: {
            global::bluzelle_cs.database_keys_response subBuilder = new global::bluzelle_cs.database_keys_response();
            if (responseCase_ == ResponseOneofCase.Keys) {
              subBuilder.MergeFrom(Keys);
            }
            input.ReadMessage(subBuilder);
            Keys = subBuilder;
            break;
          }
          case 58: {
            global::bluzelle_cs.database_size_response subBuilder = new global::bluzelle_cs.database_size_response();
            if (responseCase_ == ResponseOneofCase.Size) {
              subBuilder.MergeFrom(Size);
            }
            input.ReadMessage(subBuilder);
            Size = subBuilder;
            break;
          }
          case 66: {
            global::bluzelle_cs.database_error subBuilder = new global::bluzelle_cs.database_error();
            if (responseCase_ == ResponseOneofCase.Error) {
              subBuilder.MergeFrom(Error);
            }
            input.ReadMessage(subBuilder);
            Error = subBuilder;
            break;
          }
          case 74: {
            global::bluzelle_cs.database_has_db_response subBuilder = new global::bluzelle_cs.database_has_db_response();
            if (responseCase_ == ResponseOneofCase.HasDb) {
              subBuilder.MergeFrom(HasDb);
            }
            input.ReadMessage(subBuilder);
            HasDb = subBuilder;
            break;
          }
          case 82: {
            global::bluzelle_cs.database_writers_response subBuilder = new global::bluzelle_cs.database_writers_response();
            if (responseCase_ == ResponseOneofCase.Writers) {
              subBuilder.MergeFrom(Writers);
            }
            input.ReadMessage(subBuilder);
            Writers = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class database_nullmsg : pb::IMessage<database_nullmsg> {
    private static readonly pb::MessageParser<database_nullmsg> _parser = new pb::MessageParser<database_nullmsg>(() => new database_nullmsg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<database_nullmsg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::bluzelle_cs.DatabaseReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_nullmsg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_nullmsg(database_nullmsg other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public database_nullmsg Clone() {
      return new database_nullmsg(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as database_nullmsg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(database_nullmsg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(database_nullmsg other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
